{"dependencies":[{"name":"../common/List","data":{"isAsync":false}},{"name":"../common/SyntaxError","data":{"isAsync":false}},{"name":"../common/TokenStream","data":{"isAsync":false}},{"name":"../lexer/Lexer","data":{"isAsync":false}},{"name":"../definition-syntax","data":{"isAsync":false}},{"name":"../tokenizer","data":{"isAsync":false}},{"name":"../parser/create","data":{"isAsync":false}},{"name":"../generator/create","data":{"isAsync":false}},{"name":"../convertor/create","data":{"isAsync":false}},{"name":"../walker/create","data":{"isAsync":false}},{"name":"../utils/clone","data":{"isAsync":false}},{"name":"../utils/names","data":{"isAsync":false}},{"name":"./config/mix","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var List = _$$_REQUIRE(_dependencyMap[0], \"../common/List\");\n\n  var SyntaxError = _$$_REQUIRE(_dependencyMap[1], \"../common/SyntaxError\");\n\n  var TokenStream = _$$_REQUIRE(_dependencyMap[2], \"../common/TokenStream\");\n\n  var Lexer = _$$_REQUIRE(_dependencyMap[3], \"../lexer/Lexer\");\n\n  var definitionSyntax = _$$_REQUIRE(_dependencyMap[4], \"../definition-syntax\");\n\n  var tokenize = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer\");\n\n  var createParser = _$$_REQUIRE(_dependencyMap[6], \"../parser/create\");\n\n  var createGenerator = _$$_REQUIRE(_dependencyMap[7], \"../generator/create\");\n\n  var createConvertor = _$$_REQUIRE(_dependencyMap[8], \"../convertor/create\");\n\n  var createWalker = _$$_REQUIRE(_dependencyMap[9], \"../walker/create\");\n\n  var clone = _$$_REQUIRE(_dependencyMap[10], \"../utils/clone\");\n\n  var names = _$$_REQUIRE(_dependencyMap[11], \"../utils/names\");\n\n  var mix = _$$_REQUIRE(_dependencyMap[12], \"./config/mix\");\n\n  function _createSyntax(config) {\n    var parse = createParser(config);\n    var walk = createWalker(config);\n    var generate = createGenerator(config);\n    var convert = createConvertor(walk);\n    var syntax = {\n      List: List,\n      SyntaxError: SyntaxError,\n      TokenStream: TokenStream,\n      Lexer: Lexer,\n      vendorPrefix: names.vendorPrefix,\n      keyword: names.keyword,\n      property: names.property,\n      isCustomProperty: names.isCustomProperty,\n      definitionSyntax: definitionSyntax,\n      lexer: null,\n      createLexer: function createLexer(config) {\n        return new Lexer(config, syntax, syntax.lexer.structure);\n      },\n      tokenize: tokenize,\n      parse: parse,\n      walk: walk,\n      generate: generate,\n      find: walk.find,\n      findLast: walk.findLast,\n      findAll: walk.findAll,\n      clone: clone,\n      fromPlainObject: convert.fromPlainObject,\n      toPlainObject: convert.toPlainObject,\n      createSyntax: function createSyntax(config) {\n        return _createSyntax(mix({}, config));\n      },\n      fork: function fork(extension) {\n        var base = mix({}, config);\n        return _createSyntax(typeof extension === 'function' ? extension(base, Object.assign) : mix(base, extension));\n      }\n    };\n    syntax.lexer = new Lexer({\n      generic: true,\n      types: config.types,\n      atrules: config.atrules,\n      properties: config.properties,\n      node: config.node\n    }, syntax);\n    return syntax;\n  }\n\n  ;\n\n  exports.create = function (config) {\n    return _createSyntax(mix({}, config));\n  };\n});","lineCount":80,"map":[[2,0,1,0],[2,6,1,4,"List"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,61,1,0],[4,0,2,0],[4,6,2,4,"SyntaxError"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,75,2,0],[6,0,3,0],[6,6,3,4,"TokenStream"],[6,17,3,15],[6,20,3,18,"require"],[6,31,3,25],[6,75,3,0],[8,0,4,0],[8,6,4,4,"Lexer"],[8,11,4,9],[8,14,4,12,"require"],[8,25,4,19],[8,62,4,0],[10,0,5,0],[10,6,5,4,"definitionSyntax"],[10,22,5,20],[10,25,5,23,"require"],[10,36,5,30],[10,79,5,0],[12,0,6,0],[12,6,6,4,"tokenize"],[12,14,6,12],[12,17,6,15,"require"],[12,28,6,22],[12,63,6,0],[14,0,7,0],[14,6,7,4,"createParser"],[14,18,7,16],[14,21,7,19,"require"],[14,32,7,26],[14,71,7,0],[16,0,8,0],[16,6,8,4,"createGenerator"],[16,21,8,19],[16,24,8,22,"require"],[16,35,8,29],[16,77,8,0],[18,0,9,0],[18,6,9,4,"createConvertor"],[18,21,9,19],[18,24,9,22,"require"],[18,35,9,29],[18,77,9,0],[20,0,10,0],[20,6,10,4,"createWalker"],[20,18,10,16],[20,21,10,19,"require"],[20,32,10,26],[20,71,10,0],[22,0,11,0],[22,6,11,4,"clone"],[22,11,11,9],[22,14,11,12,"require"],[22,25,11,19],[22,63,11,0],[24,0,12,0],[24,6,12,4,"names"],[24,11,12,9],[24,14,12,12,"require"],[24,25,12,19],[24,63,12,0],[26,0,13,0],[26,6,13,4,"mix"],[26,9,13,7],[26,12,13,10,"require"],[26,23,13,17],[26,59,13,0],[28,0,15,0],[28,11,15,9,"createSyntax"],[28,24,15,0],[28,25,15,22,"config"],[28,31,15,0],[28,33,15,30],[29,0,16,4],[29,8,16,8,"parse"],[29,13,16,13],[29,16,16,16,"createParser"],[29,28,16,28],[29,29,16,29,"config"],[29,35,16,28],[29,36,16,4],[30,0,17,4],[30,8,17,8,"walk"],[30,12,17,12],[30,15,17,15,"createWalker"],[30,27,17,27],[30,28,17,28,"config"],[30,34,17,27],[30,35,17,4],[31,0,18,4],[31,8,18,8,"generate"],[31,16,18,16],[31,19,18,19,"createGenerator"],[31,34,18,34],[31,35,18,35,"config"],[31,41,18,34],[31,42,18,4],[32,0,19,4],[32,8,19,8,"convert"],[32,15,19,15],[32,18,19,18,"createConvertor"],[32,33,19,33],[32,34,19,34,"walk"],[32,38,19,33],[32,39,19,4],[33,0,21,4],[33,8,21,8,"syntax"],[33,14,21,14],[33,17,21,17],[34,0,22,8,"List"],[34,6,22,8,"List"],[34,10,22,12],[34,12,22,14,"List"],[34,16,21,17],[35,0,23,8,"SyntaxError"],[35,6,23,8,"SyntaxError"],[35,17,23,19],[35,19,23,21,"SyntaxError"],[35,30,21,17],[36,0,24,8,"TokenStream"],[36,6,24,8,"TokenStream"],[36,17,24,19],[36,19,24,21,"TokenStream"],[36,30,21,17],[37,0,25,8,"Lexer"],[37,6,25,8,"Lexer"],[37,11,25,13],[37,13,25,15,"Lexer"],[37,18,21,17],[38,0,27,8,"vendorPrefix"],[38,6,27,8,"vendorPrefix"],[38,18,27,20],[38,20,27,22,"names"],[38,25,27,27],[38,26,27,28,"vendorPrefix"],[38,38,21,17],[39,0,28,8,"keyword"],[39,6,28,8,"keyword"],[39,13,28,15],[39,15,28,17,"names"],[39,20,28,22],[39,21,28,23,"keyword"],[39,28,21,17],[40,0,29,8,"property"],[40,6,29,8,"property"],[40,14,29,16],[40,16,29,18,"names"],[40,21,29,23],[40,22,29,24,"property"],[40,30,21,17],[41,0,30,8,"isCustomProperty"],[41,6,30,8,"isCustomProperty"],[41,22,30,24],[41,24,30,26,"names"],[41,29,30,31],[41,30,30,32,"isCustomProperty"],[41,46,21,17],[42,0,32,8,"definitionSyntax"],[42,6,32,8,"definitionSyntax"],[42,22,32,24],[42,24,32,26,"definitionSyntax"],[42,40,21,17],[43,0,33,8,"lexer"],[43,6,33,8,"lexer"],[43,11,33,13],[43,13,33,15],[43,17,21,17],[44,0,34,8,"createLexer"],[44,6,34,8,"createLexer"],[44,17,34,19],[44,19,34,21],[44,40,34,30,"config"],[44,46,34,21],[44,48,34,38],[45,0,35,12],[45,15,35,19],[45,19,35,23,"Lexer"],[45,24,35,19],[45,25,35,29,"config"],[45,31,35,19],[45,33,35,37,"syntax"],[45,39,35,19],[45,41,35,45,"syntax"],[45,47,35,51],[45,48,35,52,"lexer"],[45,53,35,45],[45,54,35,58,"structure"],[45,63,35,19],[45,64,35,12],[46,0,36,9],[46,7,21,17],[47,0,38,8,"tokenize"],[47,6,38,8,"tokenize"],[47,14,38,16],[47,16,38,18,"tokenize"],[47,24,21,17],[48,0,39,8,"parse"],[48,6,39,8,"parse"],[48,11,39,13],[48,13,39,15,"parse"],[48,18,21,17],[49,0,40,8,"walk"],[49,6,40,8,"walk"],[49,10,40,12],[49,12,40,14,"walk"],[49,16,21,17],[50,0,41,8,"generate"],[50,6,41,8,"generate"],[50,14,41,16],[50,16,41,18,"generate"],[50,24,21,17],[51,0,43,8,"find"],[51,6,43,8,"find"],[51,10,43,12],[51,12,43,14,"walk"],[51,16,43,18],[51,17,43,19,"find"],[51,21,21,17],[52,0,44,8,"findLast"],[52,6,44,8,"findLast"],[52,14,44,16],[52,16,44,18,"walk"],[52,20,44,22],[52,21,44,23,"findLast"],[52,29,21,17],[53,0,45,8,"findAll"],[53,6,45,8,"findAll"],[53,13,45,15],[53,15,45,17,"walk"],[53,19,45,21],[53,20,45,22,"findAll"],[53,27,21,17],[54,0,47,8,"clone"],[54,6,47,8,"clone"],[54,11,47,13],[54,13,47,15,"clone"],[54,18,21,17],[55,0,48,8,"fromPlainObject"],[55,6,48,8,"fromPlainObject"],[55,21,48,23],[55,23,48,25,"convert"],[55,30,48,32],[55,31,48,33,"fromPlainObject"],[55,46,21,17],[56,0,49,8,"toPlainObject"],[56,6,49,8,"toPlainObject"],[56,19,49,21],[56,21,49,23,"convert"],[56,28,49,30],[56,29,49,31,"toPlainObject"],[56,42,21,17],[57,0,51,8,"createSyntax"],[57,6,51,8,"createSyntax"],[57,18,51,20],[57,20,51,22],[57,42,51,31,"config"],[57,48,51,22],[57,50,51,39],[58,0,52,12],[58,15,52,19,"createSyntax"],[58,28,52,31],[58,29,52,32,"mix"],[58,32,52,35],[58,33,52,36],[58,35,52,35],[58,37,52,40,"config"],[58,43,52,35],[58,44,52,31],[58,45,52,12],[59,0,53,9],[59,7,21,17],[60,0,54,8,"fork"],[60,6,54,8,"fork"],[60,10,54,12],[60,12,54,14],[60,26,54,23,"extension"],[60,35,54,14],[60,37,54,34],[61,0,55,12],[61,12,55,16,"base"],[61,16,55,20],[61,19,55,23,"mix"],[61,22,55,26],[61,23,55,27],[61,25,55,26],[61,27,55,31,"config"],[61,33,55,26],[61,34,55,12],[62,0,56,12],[62,15,56,19,"createSyntax"],[62,28,56,31],[62,29,57,16],[62,36,57,23,"extension"],[62,45,57,16],[62,50,57,37],[62,60,57,16],[62,63,58,22,"extension"],[62,72,58,31],[62,73,58,32,"base"],[62,77,58,31],[62,79,58,38,"Object"],[62,85,58,44],[62,86,58,45,"assign"],[62,92,58,31],[62,93,57,16],[62,96,59,22,"mix"],[62,99,59,25],[62,100,59,26,"base"],[62,104,59,25],[62,106,59,32,"extension"],[62,115,59,25],[62,116,56,31],[62,117,56,12],[63,0,61,9],[64,0,21,17],[64,5,21,4],[65,0,64,4,"syntax"],[65,4,64,4,"syntax"],[65,10,64,10],[65,11,64,11,"lexer"],[65,16,64,4],[65,19,64,19],[65,23,64,23,"Lexer"],[65,28,64,19],[65,29,64,29],[66,0,65,8,"generic"],[66,6,65,8,"generic"],[66,13,65,15],[66,15,65,17],[66,19,64,29],[67,0,66,8,"types"],[67,6,66,8,"types"],[67,11,66,13],[67,13,66,15,"config"],[67,19,66,21],[67,20,66,22,"types"],[67,25,64,29],[68,0,67,8,"atrules"],[68,6,67,8,"atrules"],[68,13,67,15],[68,15,67,17,"config"],[68,21,67,23],[68,22,67,24,"atrules"],[68,29,64,29],[69,0,68,8,"properties"],[69,6,68,8,"properties"],[69,16,68,18],[69,18,68,20,"config"],[69,24,68,26],[69,25,68,27,"properties"],[69,35,64,29],[70,0,69,8,"node"],[70,6,69,8,"node"],[70,10,69,12],[70,12,69,14,"config"],[70,18,69,20],[70,19,69,21,"node"],[71,0,64,29],[71,5,64,19],[71,7,70,7,"syntax"],[71,13,64,19],[71,14,64,4],[72,0,72,4],[72,11,72,11,"syntax"],[72,17,72,4],[73,0,73,1],[75,0,73,1],[77,0,75,0,"exports"],[77,2,75,0,"exports"],[77,9,75,7],[77,10,75,8,"create"],[77,16,75,0],[77,19,75,17],[77,29,75,26,"config"],[77,35,75,17],[77,37,75,34],[78,0,76,4],[78,11,76,11,"createSyntax"],[78,24,76,23],[78,25,76,24,"mix"],[78,28,76,27],[78,29,76,28],[78,31,76,27],[78,33,76,32,"config"],[78,39,76,27],[78,40,76,23],[78,41,76,4],[79,0,77,1],[79,3,75,0]],"functionMap":{"names":["<global>","createSyntax","syntax.createLexer","syntax.createSyntax","syntax.fork","exports.create"],"mappings":"AAA;ACc;qBCmB;SDE;sBEe;SFE;cGC;SHO;CDY;iBKE;CLE"}},"type":"js/module"}]}