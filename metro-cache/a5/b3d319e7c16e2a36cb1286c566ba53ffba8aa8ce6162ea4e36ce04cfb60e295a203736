{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.valueToPosition = valueToPosition;\n  exports.positionToValue = positionToValue;\n  exports.createArray = createArray;\n\n  var closest = function closest(array, n) {\n    var minI = 0;\n    var maxI = array.length - 1;\n\n    if (array[minI] > n) {\n      return minI;\n    } else if (array[maxI] < n) {\n      return maxI;\n    } else if (array[minI] <= n && n <= array[maxI]) {\n      var closestIndex = null;\n\n      while (closestIndex === null) {\n        var midI = Math.round((minI + maxI) / 2);\n        var midVal = array[midI];\n\n        if (midVal === n) {\n          closestIndex = midI;\n        } else if (maxI === minI + 1) {\n          var minValue = array[minI];\n          var maxValue = array[maxI];\n          var deltaMin = Math.abs(minValue - n);\n          var deltaMax = Math.abs(maxValue - n);\n          closestIndex = deltaMax <= deltaMin ? maxI : minI;\n        } else if (midVal < n) {\n          minI = midI;\n        } else if (midVal > n) {\n          maxI = midI;\n        } else {\n          closestIndex = -1;\n        }\n      }\n\n      return closestIndex;\n    }\n\n    return -1;\n  };\n\n  function valueToPosition(value, valuesArray, sliderLength) {\n    var index = closest(valuesArray, value);\n    var arrLength = valuesArray.length - 1;\n    var validIndex = index === -1 ? arrLength : index;\n    return sliderLength * validIndex / arrLength;\n  }\n\n  function positionToValue(position, valuesArray, sliderLength) {\n    var arrLength;\n    var index;\n\n    if (position < 0 || sliderLength < position) {\n      return null;\n    } else {\n      arrLength = valuesArray.length - 1;\n      index = arrLength * position / sliderLength;\n      return valuesArray[Math.round(index)];\n    }\n  }\n\n  function createArray(start, end, step) {\n    var i;\n    var length;\n    var direction = start - end > 0 ? -1 : 1;\n    var result = [];\n\n    if (!step) {\n      return result;\n    } else {\n      length = Math.abs((start - end) / step) + 1;\n\n      for (i = 0; i < length; i++) {\n        result.push(start + i * Math.abs(step) * direction);\n      }\n\n      return result;\n    }\n  }\n});","lineCount":85,"map":[[2,0,1,0,"Object"],[2,2,1,0,"Object"],[2,8,1,6],[2,9,1,7,"defineProperty"],[2,23,1,0],[2,24,1,22,"exports"],[2,31,1,0],[2,33,1,30],[2,45,1,0],[2,47,1,43],[3,0,1,44,"value"],[3,4,1,44,"value"],[3,9,1,49],[3,11,1,50],[4,0,1,43],[4,3,1,0],[5,0,1,57,"exports"],[5,2,1,57,"exports"],[5,9,1,64],[5,10,1,65,"valueToPosition"],[5,25,1,57],[5,28,1,81,"valueToPosition"],[5,43,1,57],[6,0,1,97,"exports"],[6,2,1,97,"exports"],[6,9,1,104],[6,10,1,105,"positionToValue"],[6,25,1,97],[6,28,1,121,"positionToValue"],[6,43,1,97],[7,0,1,137,"exports"],[7,2,1,137,"exports"],[7,9,1,144],[7,10,1,145,"createArray"],[7,21,1,137],[7,24,1,157,"createArray"],[7,35,1,137],[9,0,1,169],[9,6,1,173,"closest"],[9,13,1,180],[9,16,1,181],[9,25,1,190,"closest"],[9,32,1,181],[9,33,1,198,"array"],[9,38,1,181],[9,40,1,204,"n"],[9,41,1,181],[9,43,1,206],[10,0,1,207],[10,8,1,211,"minI"],[10,12,1,215],[10,15,1,216],[10,16,1,207],[11,0,1,218],[11,8,1,222,"maxI"],[11,12,1,226],[11,15,1,227,"array"],[11,20,1,232],[11,21,1,233,"length"],[11,27,1,227],[11,30,1,240],[11,31,1,218],[13,0,1,242],[13,8,1,245,"array"],[13,13,1,250],[13,14,1,251,"minI"],[13,18,1,250],[13,19,1,245],[13,22,1,257,"n"],[13,23,1,242],[13,25,1,259],[14,0,1,260],[14,13,1,267,"minI"],[14,17,1,260],[15,0,1,273],[15,5,1,242],[15,11,1,278],[15,15,1,281,"array"],[15,20,1,286],[15,21,1,287,"maxI"],[15,25,1,286],[15,26,1,281],[15,29,1,293,"n"],[15,30,1,278],[15,32,1,295],[16,0,1,296],[16,13,1,303,"maxI"],[16,17,1,296],[17,0,1,309],[17,5,1,278],[17,11,1,314],[17,15,1,317,"array"],[17,20,1,322],[17,21,1,323,"minI"],[17,25,1,322],[17,26,1,317],[17,30,1,330,"n"],[17,31,1,317],[17,35,1,333,"n"],[17,36,1,334],[17,40,1,336,"array"],[17,45,1,341],[17,46,1,342,"maxI"],[17,50,1,341],[17,51,1,314],[17,53,1,348],[18,0,1,349],[18,10,1,353,"closestIndex"],[18,22,1,365],[18,25,1,366],[18,29,1,349],[20,0,1,371],[20,13,1,377,"closestIndex"],[20,25,1,389],[20,30,1,392],[20,34,1,371],[20,36,1,397],[21,0,1,398],[21,12,1,402,"midI"],[21,16,1,406],[21,19,1,407,"Math"],[21,23,1,411],[21,24,1,412,"round"],[21,29,1,407],[21,30,1,418],[21,31,1,419,"minI"],[21,35,1,423],[21,38,1,424,"maxI"],[21,42,1,418],[21,46,1,430],[21,47,1,407],[21,48,1,398],[22,0,1,433],[22,12,1,437,"midVal"],[22,18,1,443],[22,21,1,444,"array"],[22,26,1,449],[22,27,1,450,"midI"],[22,31,1,449],[22,32,1,433],[24,0,1,456],[24,12,1,459,"midVal"],[24,18,1,465],[24,23,1,468,"n"],[24,24,1,456],[24,26,1,470],[25,0,1,471,"closestIndex"],[25,10,1,471,"closestIndex"],[25,22,1,483],[25,25,1,484,"midI"],[25,29,1,471],[26,0,1,490],[26,9,1,456],[26,15,1,495],[26,19,1,498,"maxI"],[26,23,1,502],[26,28,1,505,"minI"],[26,32,1,509],[26,35,1,510],[26,36,1,495],[26,38,1,512],[27,0,1,513],[27,14,1,517,"minValue"],[27,22,1,525],[27,25,1,526,"array"],[27,30,1,531],[27,31,1,532,"minI"],[27,35,1,531],[27,36,1,513],[28,0,1,538],[28,14,1,542,"maxValue"],[28,22,1,550],[28,25,1,551,"array"],[28,30,1,556],[28,31,1,557,"maxI"],[28,35,1,556],[28,36,1,538],[29,0,1,563],[29,14,1,567,"deltaMin"],[29,22,1,575],[29,25,1,576,"Math"],[29,29,1,580],[29,30,1,581,"abs"],[29,33,1,576],[29,34,1,585,"minValue"],[29,42,1,593],[29,45,1,594,"n"],[29,46,1,576],[29,47,1,563],[30,0,1,597],[30,14,1,601,"deltaMax"],[30,22,1,609],[30,25,1,610,"Math"],[30,29,1,614],[30,30,1,615,"abs"],[30,33,1,610],[30,34,1,619,"maxValue"],[30,42,1,627],[30,45,1,628,"n"],[30,46,1,610],[30,47,1,597],[31,0,1,631,"closestIndex"],[31,10,1,631,"closestIndex"],[31,22,1,643],[31,25,1,644,"deltaMax"],[31,33,1,652],[31,37,1,654,"deltaMin"],[31,45,1,644],[31,48,1,663,"maxI"],[31,52,1,644],[31,55,1,668,"minI"],[31,59,1,631],[32,0,1,674],[32,9,1,495],[32,15,1,679],[32,19,1,682,"midVal"],[32,25,1,688],[32,28,1,689,"n"],[32,29,1,679],[32,31,1,691],[33,0,1,692,"minI"],[33,10,1,692,"minI"],[33,14,1,696],[33,17,1,697,"midI"],[33,21,1,692],[34,0,1,703],[34,9,1,679],[34,15,1,708],[34,19,1,711,"midVal"],[34,25,1,717],[34,28,1,718,"n"],[34,29,1,708],[34,31,1,720],[35,0,1,721,"maxI"],[35,10,1,721,"maxI"],[35,14,1,725],[35,17,1,726,"midI"],[35,21,1,721],[36,0,1,732],[36,9,1,708],[36,15,1,736],[37,0,1,737,"closestIndex"],[37,10,1,737,"closestIndex"],[37,22,1,749],[37,25,1,750],[37,26,1,751],[37,27,1,737],[38,0,1,754],[39,0,1,755],[41,0,1,755],[41,13,1,762,"closestIndex"],[41,25,1,755],[42,0,1,776],[44,0,1,776],[44,11,1,782],[44,12,1,783],[44,13,1,776],[45,0,1,786],[45,3,1,169],[47,0,1,787],[47,11,1,796,"valueToPosition"],[47,26,1,787],[47,27,1,812,"value"],[47,32,1,787],[47,34,1,818,"valuesArray"],[47,45,1,787],[47,47,1,830,"sliderLength"],[47,59,1,787],[47,61,1,843],[48,0,1,844],[48,8,1,848,"index"],[48,13,1,853],[48,16,1,854,"closest"],[48,23,1,861],[48,24,1,862,"valuesArray"],[48,35,1,861],[48,37,1,874,"value"],[48,42,1,861],[48,43,1,844],[49,0,1,881],[49,8,1,885,"arrLength"],[49,17,1,894],[49,20,1,895,"valuesArray"],[49,31,1,906],[49,32,1,907,"length"],[49,38,1,895],[49,41,1,914],[49,42,1,881],[50,0,1,916],[50,8,1,920,"validIndex"],[50,18,1,930],[50,21,1,931,"index"],[50,26,1,936],[50,31,1,939],[50,32,1,940],[50,33,1,931],[50,36,1,942,"arrLength"],[50,45,1,931],[50,48,1,952,"index"],[50,53,1,916],[51,0,1,958],[51,11,1,965,"sliderLength"],[51,23,1,977],[51,26,1,978,"validIndex"],[51,36,1,965],[51,39,1,989,"arrLength"],[51,48,1,958],[52,0,1,1000],[54,0,1,1000],[54,11,1,1009,"positionToValue"],[54,26,1,1000],[54,27,1,1025,"position"],[54,35,1,1000],[54,37,1,1034,"valuesArray"],[54,48,1,1000],[54,50,1,1046,"sliderLength"],[54,62,1,1000],[54,64,1,1059],[55,0,1,1060],[55,8,1,1064,"arrLength"],[55,17,1,1060],[56,0,1,1074],[56,8,1,1078,"index"],[56,13,1,1074],[58,0,1,1084],[58,8,1,1087,"position"],[58,16,1,1095],[58,19,1,1096],[58,20,1,1087],[58,24,1,1099,"sliderLength"],[58,36,1,1111],[58,39,1,1112,"position"],[58,47,1,1084],[58,49,1,1121],[59,0,1,1122],[59,13,1,1129],[59,17,1,1122],[60,0,1,1135],[60,5,1,1084],[60,11,1,1139],[61,0,1,1140,"arrLength"],[61,6,1,1140,"arrLength"],[61,15,1,1149],[61,18,1,1150,"valuesArray"],[61,29,1,1161],[61,30,1,1162,"length"],[61,36,1,1150],[61,39,1,1169],[61,40,1,1140],[62,0,1,1171,"index"],[62,6,1,1171,"index"],[62,11,1,1176],[62,14,1,1177,"arrLength"],[62,23,1,1186],[62,26,1,1187,"position"],[62,34,1,1177],[62,37,1,1196,"sliderLength"],[62,49,1,1171],[63,0,1,1209],[63,13,1,1216,"valuesArray"],[63,24,1,1227],[63,25,1,1228,"Math"],[63,29,1,1232],[63,30,1,1233,"round"],[63,35,1,1228],[63,36,1,1239,"index"],[63,41,1,1228],[63,42,1,1227],[63,43,1,1209],[64,0,1,1248],[65,0,1,1249],[67,0,1,1249],[67,11,1,1258,"createArray"],[67,22,1,1249],[67,23,1,1270,"start"],[67,28,1,1249],[67,30,1,1276,"end"],[67,33,1,1249],[67,35,1,1280,"step"],[67,39,1,1249],[67,41,1,1285],[68,0,1,1286],[68,8,1,1290,"i"],[68,9,1,1286],[69,0,1,1292],[69,8,1,1296,"length"],[69,14,1,1292],[70,0,1,1303],[70,8,1,1307,"direction"],[70,17,1,1316],[70,20,1,1317,"start"],[70,25,1,1322],[70,28,1,1323,"end"],[70,31,1,1317],[70,34,1,1327],[70,35,1,1317],[70,38,1,1329],[70,39,1,1330],[70,40,1,1317],[70,43,1,1332],[70,44,1,1303],[71,0,1,1334],[71,8,1,1338,"result"],[71,14,1,1344],[71,17,1,1345],[71,19,1,1334],[73,0,1,1348],[73,8,1,1351],[73,9,1,1352,"step"],[73,13,1,1348],[73,15,1,1357],[74,0,1,1358],[74,13,1,1365,"result"],[74,19,1,1358],[75,0,1,1373],[75,5,1,1348],[75,11,1,1377],[76,0,1,1378,"length"],[76,6,1,1378,"length"],[76,12,1,1384],[76,15,1,1385,"Math"],[76,19,1,1389],[76,20,1,1390,"abs"],[76,23,1,1385],[76,24,1,1394],[76,25,1,1395,"start"],[76,30,1,1400],[76,33,1,1401,"end"],[76,36,1,1394],[76,40,1,1406,"step"],[76,44,1,1385],[76,48,1,1412],[76,49,1,1378],[78,0,1,1414],[78,11,1,1418,"i"],[78,12,1,1419],[78,15,1,1420],[78,16,1,1414],[78,18,1,1422,"i"],[78,19,1,1423],[78,22,1,1424,"length"],[78,28,1,1414],[78,30,1,1431,"i"],[78,31,1,1432],[78,33,1,1414],[78,35,1,1435],[79,0,1,1436,"result"],[79,8,1,1436,"result"],[79,14,1,1442],[79,15,1,1443,"push"],[79,19,1,1436],[79,20,1,1448,"start"],[79,25,1,1453],[79,28,1,1454,"i"],[79,29,1,1455],[79,32,1,1456,"Math"],[79,36,1,1460],[79,37,1,1461,"abs"],[79,40,1,1456],[79,41,1,1465,"step"],[79,45,1,1456],[79,46,1,1454],[79,49,1,1471,"direction"],[79,58,1,1436],[80,0,1,1483],[82,0,1,1483],[82,13,1,1490,"result"],[82,19,1,1483],[83,0,1,1498],[84,0,1,1499]],"functionMap":{"names":["<global>","closest","valueToPosition","positionToValue","createArray"],"mappings":"AAA,qLC,6lBD,CE,qNC,yPC"}},"type":"js/module"}]}