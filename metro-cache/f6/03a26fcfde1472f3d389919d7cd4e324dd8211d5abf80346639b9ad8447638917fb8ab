{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var shape = {\n    generic: true,\n    types: {},\n    atrules: {},\n    properties: {},\n    parseContext: {},\n    scope: {},\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n  };\n\n  function isObject(value) {\n    return value && value.constructor === Object;\n  }\n\n  function copy(value) {\n    if (isObject(value)) {\n      return _extends({}, value);\n    } else {\n      return value;\n    }\n  }\n\n  function extend(dest, src) {\n    for (var key in src) {\n      if (hasOwnProperty.call(src, key)) {\n        if (isObject(dest[key])) {\n          extend(dest[key], copy(src[key]));\n        } else {\n          dest[key] = copy(src[key]);\n        }\n      }\n    }\n  }\n\n  function mix(dest, src, shape) {\n    for (var key in shape) {\n      if (hasOwnProperty.call(shape, key) === false) {\n        continue;\n      }\n\n      if (shape[key] === true) {\n        if (key in src) {\n          if (hasOwnProperty.call(src, key)) {\n            dest[key] = copy(src[key]);\n          }\n        }\n      } else if (shape[key]) {\n        if (isObject(shape[key])) {\n          var res = {};\n          extend(res, dest[key]);\n          extend(res, src[key]);\n          dest[key] = res;\n        } else if (Array.isArray(shape[key])) {\n          var res = {};\n          var innerShape = shape[key].reduce(function (s, k) {\n            s[k] = true;\n            return s;\n          }, {});\n\n          for (var name in dest[key]) {\n            if (hasOwnProperty.call(dest[key], name)) {\n              res[name] = {};\n\n              if (dest[key] && dest[key][name]) {\n                mix(res[name], dest[key][name], innerShape);\n              }\n            }\n          }\n\n          for (var name in src[key]) {\n            if (hasOwnProperty.call(src[key], name)) {\n              if (!res[name]) {\n                res[name] = {};\n              }\n\n              if (src[key] && src[key][name]) {\n                mix(res[name], src[key][name], innerShape);\n              }\n            }\n          }\n\n          dest[key] = res;\n        }\n      }\n    }\n\n    return dest;\n  }\n\n  module.exports = function (dest, src) {\n    return mix(dest, src, shape);\n  };\n});","lineCount":99,"map":[[4,0,1,0],[4,6,1,4,"hasOwnProperty"],[4,20,1,18],[4,23,1,21,"Object"],[4,29,1,27],[4,30,1,28,"prototype"],[4,39,1,21],[4,40,1,38,"hasOwnProperty"],[4,54,1,0],[5,0,2,0],[5,6,2,4,"shape"],[5,11,2,9],[5,14,2,12],[6,0,3,4,"generic"],[6,4,3,4,"generic"],[6,11,3,11],[6,13,3,13],[6,17,2,12],[7,0,4,4,"types"],[7,4,4,4,"types"],[7,9,4,9],[7,11,4,11],[7,13,2,12],[8,0,5,4,"atrules"],[8,4,5,4,"atrules"],[8,11,5,11],[8,13,5,13],[8,15,2,12],[9,0,6,4,"properties"],[9,4,6,4,"properties"],[9,14,6,14],[9,16,6,16],[9,18,2,12],[10,0,7,4,"parseContext"],[10,4,7,4,"parseContext"],[10,16,7,16],[10,18,7,18],[10,20,2,12],[11,0,8,4,"scope"],[11,4,8,4,"scope"],[11,9,8,9],[11,11,8,11],[11,13,2,12],[12,0,9,4,"atrule"],[12,4,9,4,"atrule"],[12,10,9,10],[12,12,9,12],[12,13,9,13],[12,20,9,12],[12,21,2,12],[13,0,10,4,"pseudo"],[13,4,10,4,"pseudo"],[13,10,10,10],[13,12,10,12],[13,13,10,13],[13,20,10,12],[13,21,2,12],[14,0,11,4,"node"],[14,4,11,4,"node"],[14,8,11,8],[14,10,11,10],[14,11,11,11],[14,17,11,10],[14,19,11,19],[14,30,11,10],[14,32,11,32],[14,39,11,10],[14,41,11,41],[14,51,11,10],[14,53,11,53],[14,66,11,10],[15,0,2,12],[15,3,2,0],[17,0,14,0],[17,11,14,9,"isObject"],[17,19,14,0],[17,20,14,18,"value"],[17,25,14,0],[17,27,14,25],[18,0,15,4],[18,11,15,11,"value"],[18,16,15,16],[18,20,15,20,"value"],[18,25,15,25],[18,26,15,26,"constructor"],[18,37,15,20],[18,42,15,42,"Object"],[18,48,15,4],[19,0,16,1],[21,0,18,0],[21,11,18,9,"copy"],[21,15,18,0],[21,16,18,14,"value"],[21,21,18,0],[21,23,18,21],[22,0,19,4],[22,8,19,8,"isObject"],[22,16,19,16],[22,17,19,17,"value"],[22,22,19,16],[22,23,19,4],[22,25,19,25],[23,0,20,8],[23,13,20,15],[23,22,20,29],[23,24,20,15],[23,26,20,33,"value"],[23,31,20,15],[23,32,20,8],[24,0,21,5],[24,5,19,4],[24,11,21,11],[25,0,22,8],[25,13,22,15,"value"],[25,18,22,8],[26,0,23,5],[27,0,24,1],[29,0,25,0],[29,11,25,9,"extend"],[29,17,25,0],[29,18,25,16,"dest"],[29,22,25,0],[29,24,25,22,"src"],[29,27,25,0],[29,29,25,27],[30,0,26,4],[30,9,26,9],[30,13,26,13,"key"],[30,16,26,4],[30,20,26,20,"src"],[30,23,26,4],[30,25,26,25],[31,0,27,8],[31,10,27,12,"hasOwnProperty"],[31,24,27,26],[31,25,27,27,"call"],[31,29,27,12],[31,30,27,32,"src"],[31,33,27,12],[31,35,27,37,"key"],[31,38,27,12],[31,39,27,8],[31,41,27,43],[32,0,28,12],[32,12,28,16,"isObject"],[32,20,28,24],[32,21,28,25,"dest"],[32,25,28,29],[32,26,28,30,"key"],[32,29,28,29],[32,30,28,24],[32,31,28,12],[32,33,28,37],[33,0,29,16,"extend"],[33,10,29,16,"extend"],[33,16,29,22],[33,17,29,23,"dest"],[33,21,29,27],[33,22,29,28,"key"],[33,25,29,27],[33,26,29,22],[33,28,29,34,"copy"],[33,32,29,38],[33,33,29,39,"src"],[33,36,29,42],[33,37,29,43,"key"],[33,40,29,42],[33,41,29,38],[33,42,29,22],[33,43,29,16],[34,0,30,13],[34,9,28,12],[34,15,30,19],[35,0,31,16,"dest"],[35,10,31,16,"dest"],[35,14,31,20],[35,15,31,21,"key"],[35,18,31,20],[35,19,31,16],[35,22,31,28,"copy"],[35,26,31,32],[35,27,31,33,"src"],[35,30,31,36],[35,31,31,37,"key"],[35,34,31,36],[35,35,31,32],[35,36,31,16],[36,0,32,13],[37,0,33,9],[38,0,34,5],[39,0,35,1],[41,0,37,0],[41,11,37,9,"mix"],[41,14,37,0],[41,15,37,13,"dest"],[41,19,37,0],[41,21,37,19,"src"],[41,24,37,0],[41,26,37,24,"shape"],[41,31,37,0],[41,33,37,31],[42,0,38,4],[42,9,38,9],[42,13,38,13,"key"],[42,16,38,4],[42,20,38,20,"shape"],[42,25,38,4],[42,27,38,27],[43,0,39,8],[43,10,39,12,"hasOwnProperty"],[43,24,39,26],[43,25,39,27,"call"],[43,29,39,12],[43,30,39,32,"shape"],[43,35,39,12],[43,37,39,39,"key"],[43,40,39,12],[43,46,39,48],[43,51,39,8],[43,53,39,55],[44,0,40,12],[45,0,41,9],[47,0,43,8],[47,10,43,12,"shape"],[47,15,43,17],[47,16,43,18,"key"],[47,19,43,17],[47,20,43,12],[47,25,43,27],[47,29,43,8],[47,31,43,33],[48,0,44,12],[48,12,44,16,"key"],[48,15,44,19],[48,19,44,23,"src"],[48,22,44,12],[48,24,44,28],[49,0,45,16],[49,14,45,20,"hasOwnProperty"],[49,28,45,34],[49,29,45,35,"call"],[49,33,45,20],[49,34,45,40,"src"],[49,37,45,20],[49,39,45,45,"key"],[49,42,45,20],[49,43,45,16],[49,45,45,51],[50,0,46,20,"dest"],[50,12,46,20,"dest"],[50,16,46,24],[50,17,46,25,"key"],[50,20,46,24],[50,21,46,20],[50,24,46,32,"copy"],[50,28,46,36],[50,29,46,37,"src"],[50,32,46,40],[50,33,46,41,"key"],[50,36,46,40],[50,37,46,36],[50,38,46,20],[51,0,47,17],[52,0,48,13],[53,0,49,9],[53,7,43,8],[53,13,49,15],[53,17,49,19,"shape"],[53,22,49,24],[53,23,49,25,"key"],[53,26,49,24],[53,27,49,15],[53,29,49,31],[54,0,50,12],[54,12,50,16,"isObject"],[54,20,50,24],[54,21,50,25,"shape"],[54,26,50,30],[54,27,50,31,"key"],[54,30,50,30],[54,31,50,24],[54,32,50,12],[54,34,50,38],[55,0,51,16],[55,14,51,20,"res"],[55,17,51,23],[55,20,51,26],[55,22,51,16],[56,0,52,16,"extend"],[56,10,52,16,"extend"],[56,16,52,22],[56,17,52,23,"res"],[56,20,52,22],[56,22,52,28,"dest"],[56,26,52,32],[56,27,52,33,"key"],[56,30,52,32],[56,31,52,22],[56,32,52,16],[57,0,53,16,"extend"],[57,10,53,16,"extend"],[57,16,53,22],[57,17,53,23,"res"],[57,20,53,22],[57,22,53,28,"src"],[57,25,53,31],[57,26,53,32,"key"],[57,29,53,31],[57,30,53,22],[57,31,53,16],[58,0,54,16,"dest"],[58,10,54,16,"dest"],[58,14,54,20],[58,15,54,21,"key"],[58,18,54,20],[58,19,54,16],[58,22,54,28,"res"],[58,25,54,16],[59,0,55,13],[59,9,50,12],[59,15,55,19],[59,19,55,23,"Array"],[59,24,55,28],[59,25,55,29,"isArray"],[59,32,55,23],[59,33,55,37,"shape"],[59,38,55,42],[59,39,55,43,"key"],[59,42,55,42],[59,43,55,23],[59,44,55,19],[59,46,55,50],[60,0,56,16],[60,14,56,20,"res"],[60,17,56,23],[60,20,56,26],[60,22,56,16],[61,0,57,16],[61,14,57,20,"innerShape"],[61,24,57,30],[61,27,57,33,"shape"],[61,32,57,38],[61,33,57,39,"key"],[61,36,57,38],[61,37,57,33],[61,38,57,44,"reduce"],[61,44,57,33],[61,45,57,51],[61,55,57,60,"s"],[61,56,57,51],[61,58,57,63,"k"],[61,59,57,51],[61,61,57,66],[62,0,58,20,"s"],[62,12,58,20,"s"],[62,13,58,21],[62,14,58,22,"k"],[62,15,58,21],[62,16,58,20],[62,19,58,27],[62,23,58,20],[63,0,59,20],[63,19,59,27,"s"],[63,20,59,20],[64,0,60,17],[64,11,57,33],[64,13,60,19],[64,15,57,33],[64,16,57,16],[66,0,61,16],[66,15,61,21],[66,19,61,25,"name"],[66,23,61,16],[66,27,61,33,"dest"],[66,31,61,37],[66,32,61,38,"key"],[66,35,61,37],[66,36,61,16],[66,38,61,44],[67,0,62,20],[67,16,62,24,"hasOwnProperty"],[67,30,62,38],[67,31,62,39,"call"],[67,35,62,24],[67,36,62,44,"dest"],[67,40,62,48],[67,41,62,49,"key"],[67,44,62,48],[67,45,62,24],[67,47,62,55,"name"],[67,51,62,24],[67,52,62,20],[67,54,62,62],[68,0,63,24,"res"],[68,14,63,24,"res"],[68,17,63,27],[68,18,63,28,"name"],[68,22,63,27],[68,23,63,24],[68,26,63,36],[68,28,63,24],[70,0,64,24],[70,18,64,28,"dest"],[70,22,64,32],[70,23,64,33,"key"],[70,26,64,32],[70,27,64,28],[70,31,64,41,"dest"],[70,35,64,45],[70,36,64,46,"key"],[70,39,64,45],[70,40,64,41],[70,41,64,51,"name"],[70,45,64,41],[70,46,64,24],[70,48,64,58],[71,0,65,28,"mix"],[71,16,65,28,"mix"],[71,19,65,31],[71,20,65,32,"res"],[71,23,65,35],[71,24,65,36,"name"],[71,28,65,35],[71,29,65,31],[71,31,65,43,"dest"],[71,35,65,47],[71,36,65,48,"key"],[71,39,65,47],[71,40,65,43],[71,41,65,53,"name"],[71,45,65,43],[71,46,65,31],[71,48,65,60,"innerShape"],[71,58,65,31],[71,59,65,28],[72,0,66,25],[73,0,67,21],[74,0,68,17],[76,0,69,16],[76,15,69,21],[76,19,69,25,"name"],[76,23,69,16],[76,27,69,33,"src"],[76,30,69,36],[76,31,69,37,"key"],[76,34,69,36],[76,35,69,16],[76,37,69,43],[77,0,70,20],[77,16,70,24,"hasOwnProperty"],[77,30,70,38],[77,31,70,39,"call"],[77,35,70,24],[77,36,70,44,"src"],[77,39,70,47],[77,40,70,48,"key"],[77,43,70,47],[77,44,70,24],[77,46,70,54,"name"],[77,50,70,24],[77,51,70,20],[77,53,70,61],[78,0,71,24],[78,18,71,28],[78,19,71,29,"res"],[78,22,71,32],[78,23,71,33,"name"],[78,27,71,32],[78,28,71,24],[78,30,71,40],[79,0,72,28,"res"],[79,16,72,28,"res"],[79,19,72,31],[79,20,72,32,"name"],[79,24,72,31],[79,25,72,28],[79,28,72,40],[79,30,72,28],[80,0,73,25],[82,0,74,24],[82,18,74,28,"src"],[82,21,74,31],[82,22,74,32,"key"],[82,25,74,31],[82,26,74,28],[82,30,74,40,"src"],[82,33,74,43],[82,34,74,44,"key"],[82,37,74,43],[82,38,74,40],[82,39,74,49,"name"],[82,43,74,40],[82,44,74,24],[82,46,74,56],[83,0,75,28,"mix"],[83,16,75,28,"mix"],[83,19,75,31],[83,20,75,32,"res"],[83,23,75,35],[83,24,75,36,"name"],[83,28,75,35],[83,29,75,31],[83,31,75,43,"src"],[83,34,75,46],[83,35,75,47,"key"],[83,38,75,46],[83,39,75,43],[83,40,75,52,"name"],[83,44,75,43],[83,45,75,31],[83,47,75,59,"innerShape"],[83,57,75,31],[83,58,75,28],[84,0,76,25],[85,0,77,21],[86,0,78,17],[88,0,79,16,"dest"],[88,10,79,16,"dest"],[88,14,79,20],[88,15,79,21,"key"],[88,18,79,20],[88,19,79,16],[88,22,79,28,"res"],[88,25,79,16],[89,0,80,13],[90,0,81,9],[91,0,82,5],[93,0,83,4],[93,11,83,11,"dest"],[93,15,83,4],[94,0,84,1],[96,0,86,0,"module"],[96,2,86,0,"module"],[96,8,86,6],[96,9,86,7,"exports"],[96,16,86,0],[96,19,86,17],[96,29,86,26,"dest"],[96,33,86,17],[96,35,86,32,"src"],[96,38,86,17],[96,40,86,37],[97,0,87,4],[97,11,87,11,"mix"],[97,14,87,14],[97,15,87,15,"dest"],[97,19,87,14],[97,21,87,21,"src"],[97,24,87,14],[97,26,87,26,"shape"],[97,31,87,14],[97,32,87,4],[98,0,88,1],[98,3,86,0]],"functionMap":{"names":["<global>","isObject","copy","extend","mix","shape.key.reduce$argument_0","module.exports"],"mappings":"AAA;ACa;CDE;AEE;CFM;AGC;CHU;AIE;mDCoB;iBDG;CJwB;iBME;CNE"}},"type":"js/module"}]}