{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./elements/Rect","data":{"isAsync":false}},{"name":"./elements/Circle","data":{"isAsync":false}},{"name":"./elements/Ellipse","data":{"isAsync":false}},{"name":"./elements/Polygon","data":{"isAsync":false}},{"name":"./elements/Polyline","data":{"isAsync":false}},{"name":"./elements/Line","data":{"isAsync":false}},{"name":"./elements/Svg","data":{"isAsync":false}},{"name":"./elements/Path","data":{"isAsync":false}},{"name":"./elements/G","data":{"isAsync":false}},{"name":"./elements/Text","data":{"isAsync":false}},{"name":"./elements/TSpan","data":{"isAsync":false}},{"name":"./elements/TextPath","data":{"isAsync":false}},{"name":"./elements/Use","data":{"isAsync":false}},{"name":"./elements/Image","data":{"isAsync":false}},{"name":"./elements/Symbol","data":{"isAsync":false}},{"name":"./elements/Defs","data":{"isAsync":false}},{"name":"./elements/LinearGradient","data":{"isAsync":false}},{"name":"./elements/RadialGradient","data":{"isAsync":false}},{"name":"./elements/Stop","data":{"isAsync":false}},{"name":"./elements/ClipPath","data":{"isAsync":false}},{"name":"./elements/Pattern","data":{"isAsync":false}},{"name":"./elements/Mask","data":{"isAsync":false}},{"name":"./elements/Marker","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.fetchText = fetchText;\n  exports.SvgUri = SvgUri;\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = _parse;\n  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _Rect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./elements/Rect\"));\n\n  var _Circle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./elements/Circle\"));\n\n  var _Ellipse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./elements/Ellipse\"));\n\n  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./elements/Polygon\"));\n\n  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./elements/Polyline\"));\n\n  var _Line = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./elements/Line\"));\n\n  var _Svg = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./elements/Svg\"));\n\n  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./elements/Path\"));\n\n  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./elements/G\"));\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./elements/Text\"));\n\n  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./elements/TSpan\"));\n\n  var _TextPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./elements/TextPath\"));\n\n  var _Use = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./elements/Use\"));\n\n  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./elements/Image\"));\n\n  var _Symbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./elements/Symbol\"));\n\n  var _Defs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./elements/Defs\"));\n\n  var _LinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./elements/LinearGradient\"));\n\n  var _RadialGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./elements/RadialGradient\"));\n\n  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"./elements/Stop\"));\n\n  var _ClipPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"./elements/ClipPath\"));\n\n  var _Pattern = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31], \"./elements/Pattern\"));\n\n  var _Mask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32], \"./elements/Mask\"));\n\n  var _Marker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33], \"./elements/Marker\"));\n\n  var _jsxFileName = \"/home/admin1/Desktop/Deepak_Fellowship/reactfundoo/node_modules/react-native-svg/src/xml.tsx\";\n  var tags = {\n    svg: _Svg.default,\n    circle: _Circle.default,\n    ellipse: _Ellipse.default,\n    g: _G.default,\n    text: _Text.default,\n    tspan: _TSpan.default,\n    textPath: _TextPath.default,\n    path: _Path.default,\n    polygon: _Polygon.default,\n    polyline: _Polyline.default,\n    line: _Line.default,\n    rect: _Rect.default,\n    use: _Use.default,\n    image: _Image.default,\n    symbol: _Symbol.default,\n    defs: _Defs.default,\n    linearGradient: _LinearGradient.default,\n    radialGradient: _RadialGradient.default,\n    stop: _Stop.default,\n    clipPath: _ClipPath.default,\n    pattern: _Pattern.default,\n    mask: _Mask.default,\n    marker: _Marker.default\n  };\n  exports.tags = tags;\n\n  function missingTag() {\n    return null;\n  }\n\n  function SvgAst(_ref) {\n    var ast = _ref.ast,\n        override = _ref.override;\n\n    if (!ast) {\n      return null;\n    }\n\n    var props = ast.props,\n        children = ast.children;\n    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      }\n    }), children);\n  }\n\n  function SvgXml(props) {\n    var xml = props.xml,\n        override = props.override;\n    var ast = (0, _react.useMemo)(function () {\n      return xml !== null ? _parse(xml) : null;\n    }, [xml]);\n    return _react.default.createElement(SvgAst, {\n      ast: ast,\n      override: override || props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      }\n    });\n  }\n\n  function fetchText(uri) {\n    var response;\n    return _regenerator.default.async(function fetchText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.text());\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  var err = console.error.bind(console);\n  exports.err = err;\n\n  function SvgUri(props) {\n    var uri = props.uri;\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      uri ? fetchText(uri).then(setXml).catch(err) : setXml(null);\n    }, [uri]);\n    return _react.default.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    });\n  }\n\n  var SvgFromXml = function (_Component) {\n    (0, _inherits2.default)(SvgFromXml, _Component);\n\n    function SvgFromXml() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SvgFromXml);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf4.default)(SvgFromXml)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        ast: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(SvgFromXml, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.parse(this.props.xml);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var xml = this.props.xml;\n\n        if (xml !== prevProps.xml) {\n          this.parse(xml);\n        }\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(xml) {\n        try {\n          this.setState({\n            ast: xml ? _parse(xml) : null\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            ast = this.state.ast;\n        return _react.default.createElement(SvgAst, {\n          ast: ast,\n          override: props.override || props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          }\n        });\n      }\n    }]);\n    return SvgFromXml;\n  }(_react.Component);\n\n  exports.SvgFromXml = SvgFromXml;\n\n  var SvgFromUri = function (_Component2) {\n    (0, _inherits2.default)(SvgFromUri, _Component2);\n\n    function SvgFromUri() {\n      var _getPrototypeOf3;\n\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, SvgFromUri);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf4.default)(SvgFromUri)).call.apply(_getPrototypeOf3, [this].concat(args)));\n      _this2.state = {\n        xml: null\n      };\n      return _this2;\n    }\n\n    (0, _createClass2.default)(SvgFromUri, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.fetch(this.props.uri);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var uri = this.props.uri;\n\n        if (uri !== prevProps.uri) {\n          this.fetch(uri);\n        }\n      }\n    }, {\n      key: \"fetch\",\n      value: function fetch(uri) {\n        return _regenerator.default.async(function fetch$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!uri) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(fetchText(uri));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]]);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(SvgFromXml, {\n          xml: xml,\n          override: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          }\n        });\n      }\n    }]);\n    return SvgFromUri;\n  }(_react.Component);\n\n  exports.SvgFromUri = SvgFromUri;\n\n  var upperCase = function upperCase(_match, letter) {\n    return letter.toUpperCase();\n  };\n\n  var camelCase = function camelCase(phrase) {\n    return phrase.replace(/[:-]([a-z])/g, upperCase);\n  };\n\n  exports.camelCase = camelCase;\n\n  function getStyle(string) {\n    var style = {};\n    var declarations = string.split(';');\n    var length = declarations.length;\n\n    for (var i = 0; i < length; i++) {\n      var declaration = declarations[i];\n\n      if (declaration.length !== 0) {\n        var split = declaration.split(':');\n        var _property = split[0];\n        var value = split[1];\n        style[camelCase(_property.trim())] = value.trim();\n      }\n    }\n\n    return style;\n  }\n\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      var Tag = value.Tag,\n          props = value.props,\n          children = value.children;\n      return _react.default.createElement(Tag, (0, _extends2.default)({\n        key: index\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      }), children.map(astToReact));\n    }\n\n    return value;\n  }\n\n  function repeat(str, i) {\n    var result = '';\n\n    while (i--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  var toSpaces = function toSpaces(tabs) {\n    return repeat('  ', tabs.length);\n  };\n\n  function locate(source, i) {\n    var lines = source.split('\\n');\n    var nLines = lines.length;\n    var column = i;\n    var line = 0;\n\n    for (; line < nLines; line++) {\n      var length = lines[line].length;\n\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n\n    var before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    var beforeExec = /(^|\\n).*$/.exec(before);\n    var beforeLine = beforeExec && beforeExec[0] || '';\n    var after = source.slice(i);\n    var afterExec = /.*(\\n|$)/.exec(after);\n    var afterLine = afterExec && afterExec[0];\n    var pad = repeat(' ', beforeLine.length);\n    var snippet = \"\" + beforeLine + afterLine + \"\\n\" + pad + \"^\";\n    return {\n      line: line,\n      column: column,\n      snippet: snippet\n    };\n  }\n\n  var validNameCharacters = /[a-zA-Z0-9:_-]/;\n  var whitespace = /[\\s\\t\\r\\n]/;\n  var quotemarks = /['\"]/;\n\n  function _parse(source, middleware) {\n    var length = source.length;\n    var currentElement = null;\n    var state = metadata;\n    var children = null;\n    var root;\n    var stack = [];\n\n    function error(message) {\n      var _locate = locate(source, i),\n          line = _locate.line,\n          column = _locate.column,\n          snippet = _locate.snippet;\n\n      throw new Error(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n\" + snippet);\n    }\n\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {\n        i++;\n      }\n\n      return neutral();\n    }\n\n    function neutral() {\n      var text = '';\n      var char;\n\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n\n      if (source[i] === '<') {\n        return openingTag;\n      }\n\n      return neutral;\n    }\n\n    function openingTag() {\n      var char = source[i];\n\n      if (char === '?') {\n        return neutral;\n      }\n\n      if (char === '!') {\n        var start = i + 1;\n\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n\n        var end = i + 8;\n\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n\n      if (char === '/') {\n        return closingTag;\n      }\n\n      var tag = getName();\n      var props = {};\n      var element = {\n        tag: tag,\n        props: props,\n        children: [],\n        parent: currentElement,\n        Tag: tags[tag] || missingTag\n      };\n\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n\n      getAttributes(props);\n      var style = props.style;\n\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n\n      var selfClosing = false;\n\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      if (!selfClosing) {\n        currentElement = element;\n        children = element.children;\n        stack.push(element);\n      }\n\n      return neutral;\n    }\n\n    function comment() {\n      var index = source.indexOf('-->', i);\n\n      if (!~index) {\n        error('expected -->');\n      }\n\n      i = index + 2;\n      return neutral;\n    }\n\n    function cdata() {\n      var index = source.indexOf(']]>', i);\n\n      if (!~index) {\n        error('expected ]]>');\n      }\n\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n\n    function closingTag() {\n      var tag = getName();\n\n      if (!tag) {\n        error('Expected tag name');\n      }\n\n      if (currentElement && tag !== currentElement.tag) {\n        error(\"Expected closing tag </\" + tag + \"> to match opening tag <\" + currentElement.tag + \">\");\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n\n      if (currentElement) {\n        var _currentElement = currentElement;\n        children = _currentElement.children;\n      }\n\n      return neutral;\n    }\n\n    function getName() {\n      var name = '';\n      var char;\n\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n\n      return name;\n    }\n\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n\n        allowSpaces();\n        var name = getName();\n\n        if (!name) {\n          return;\n        }\n\n        var value = true;\n        allowSpaces();\n\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n\n          if (!isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n\n        props[camelCase(name)] = value;\n      }\n    }\n\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n\n    function getUnquotedAttributeValue() {\n      var value = '';\n\n      do {\n        var char = source[i];\n\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n\n        value += char;\n        i += 1;\n      } while (i < length);\n\n      return value;\n    }\n\n    function getQuotedAttributeValue() {\n      var quotemark = source[i++];\n      var value = '';\n      var escaped = false;\n\n      while (i < length) {\n        var char = source[i++];\n\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n\n        value += escaped ? \"\\\\\" + char : char;\n        escaped = false;\n      }\n\n      return value;\n    }\n\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n\n    var i = 0;\n\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n\n      state = state();\n      i += 1;\n    }\n\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n\n    if (root) {\n      var xml = (middleware ? middleware(root) : root) || root;\n\n      var _ast = xml.children.map(astToReact);\n\n      var jsx = xml;\n      jsx.children = _ast;\n      return jsx;\n    }\n\n    return null;\n  }\n});","lineCount":749,"map":[[34,0,1,0],[36,0,8,0],[38,0,9,0],[40,0,10,0],[42,0,11,0],[44,0,12,0],[46,0,13,0],[48,0,14,0],[50,0,15,0],[52,0,16,0],[54,0,17,0],[56,0,18,0],[58,0,19,0],[60,0,20,0],[62,0,21,0],[64,0,22,0],[66,0,23,0],[68,0,24,0],[70,0,25,0],[72,0,26,0],[74,0,27,0],[76,0,28,0],[78,0,29,0],[80,0,30,0],[83,0,32,7],[83,6,32,13,"tags"],[83,10,32,51],[83,13,32,54],[84,0,33,2,"svg"],[84,4,33,2,"svg"],[84,7,33,5],[84,9,33,7,"Svg"],[84,21,32,54],[85,0,34,2,"circle"],[85,4,34,2,"circle"],[85,10,34,8],[85,12,34,10,"Circle"],[85,27,32,54],[86,0,35,2,"ellipse"],[86,4,35,2,"ellipse"],[86,11,35,9],[86,13,35,11,"Ellipse"],[86,29,32,54],[87,0,36,2,"g"],[87,4,36,2,"g"],[87,5,36,3],[87,7,36,5,"G"],[87,17,32,54],[88,0,37,2,"text"],[88,4,37,2,"text"],[88,8,37,6],[88,10,37,8,"Text"],[88,23,32,54],[89,0,38,2,"tspan"],[89,4,38,2,"tspan"],[89,9,38,7],[89,11,38,9,"TSpan"],[89,25,32,54],[90,0,39,2,"textPath"],[90,4,39,2,"textPath"],[90,12,39,10],[90,14,39,12,"TextPath"],[90,31,32,54],[91,0,40,2,"path"],[91,4,40,2,"path"],[91,8,40,6],[91,10,40,8,"Path"],[91,23,32,54],[92,0,41,2,"polygon"],[92,4,41,2,"polygon"],[92,11,41,9],[92,13,41,11,"Polygon"],[92,29,32,54],[93,0,42,2,"polyline"],[93,4,42,2,"polyline"],[93,12,42,10],[93,14,42,12,"Polyline"],[93,31,32,54],[94,0,43,2,"line"],[94,4,43,2,"line"],[94,8,43,6],[94,10,43,8,"Line"],[94,23,32,54],[95,0,44,2,"rect"],[95,4,44,2,"rect"],[95,8,44,6],[95,10,44,8,"Rect"],[95,23,32,54],[96,0,45,2,"use"],[96,4,45,2,"use"],[96,7,45,5],[96,9,45,7,"Use"],[96,21,32,54],[97,0,46,2,"image"],[97,4,46,2,"image"],[97,9,46,7],[97,11,46,9,"Image"],[97,25,32,54],[98,0,47,2,"symbol"],[98,4,47,2,"symbol"],[98,10,47,8],[98,12,47,10,"Symbol"],[98,27,32,54],[99,0,48,2,"defs"],[99,4,48,2,"defs"],[99,8,48,6],[99,10,48,8,"Defs"],[99,23,32,54],[100,0,49,2,"linearGradient"],[100,4,49,2,"linearGradient"],[100,18,49,16],[100,20,49,18,"LinearGradient"],[100,43,32,54],[101,0,50,2,"radialGradient"],[101,4,50,2,"radialGradient"],[101,18,50,16],[101,20,50,18,"RadialGradient"],[101,43,32,54],[102,0,51,2,"stop"],[102,4,51,2,"stop"],[102,8,51,6],[102,10,51,8,"Stop"],[102,23,32,54],[103,0,52,2,"clipPath"],[103,4,52,2,"clipPath"],[103,12,52,10],[103,14,52,12,"ClipPath"],[103,31,32,54],[104,0,53,2,"pattern"],[104,4,53,2,"pattern"],[104,11,53,9],[104,13,53,11,"Pattern"],[104,29,32,54],[105,0,54,2,"mask"],[105,4,54,2,"mask"],[105,8,54,6],[105,10,54,8,"Mask"],[105,23,32,54],[106,0,55,2,"marker"],[106,4,55,2,"marker"],[106,10,55,8],[106,12,55,10,"Marker"],[107,0,32,54],[107,3,32,7],[110,0,58,0],[110,11,58,9,"missingTag"],[110,21,58,0],[110,24,58,22],[111,0,59,2],[111,11,59,9],[111,15,59,2],[112,0,60,1],[114,0,92,7],[114,11,92,16,"SvgAst"],[114,17,92,7],[114,24,92,52],[115,0,92,52],[115,8,92,25,"ast"],[115,11,92,52],[115,19,92,25,"ast"],[115,22,92,52],[116,0,92,52],[116,8,92,30,"override"],[116,16,92,52],[116,24,92,30,"override"],[116,32,92,52],[118,0,93,2],[118,8,93,6],[118,9,93,7,"ast"],[118,12,93,2],[118,14,93,12],[119,0,94,4],[119,13,94,11],[119,17,94,4],[120,0,95,3],[122,0,92,52],[122,8,96,10,"props"],[122,13,92,52],[122,16,96,30,"ast"],[122,19,92,52],[122,20,96,10,"props"],[122,25,92,52],[123,0,92,52],[123,8,96,17,"children"],[123,16,92,52],[123,19,96,30,"ast"],[123,22,92,52],[123,23,96,17,"children"],[123,31,92,52],[124,0,97,2],[124,11,98,4],[124,40,98,5],[124,52,98,4],[124,81,98,13,"props"],[124,86,98,4],[124,88,98,24,"override"],[124,96,98,4],[125,0,98,4],[126,0,98,4],[127,0,98,4],[128,0,98,4],[129,0,98,4],[129,8,99,7,"children"],[129,16,98,4],[129,17,97,2],[130,0,102,1],[132,0,104,7],[132,11,104,16,"SvgXml"],[132,17,104,7],[132,18,104,23,"props"],[132,23,104,7],[132,25,104,40],[133,0,104,40],[133,8,105,10,"xml"],[133,11,104,40],[133,14,105,28,"props"],[133,19,104,40],[133,20,105,10,"xml"],[133,23,104,40],[134,0,104,40],[134,8,105,15,"override"],[134,16,104,40],[134,19,105,28,"props"],[134,24,104,40],[134,25,105,15,"override"],[134,33,104,40],[135,0,106,2],[135,8,106,8,"ast"],[135,11,106,11],[135,14,106,14],[135,34,106,37],[136,0,106,37],[136,13,106,44,"xml"],[136,16,106,47],[136,21,106,52],[136,25,106,44],[136,28,106,59,"parse"],[136,34,106,64],[136,35,106,65,"xml"],[136,38,106,64],[136,39,106,44],[136,42,106,72],[136,46,106,37],[137,0,106,37],[137,5,106,14],[137,7,106,79],[137,8,107,4,"xml"],[137,11,106,79],[137,12,106,14],[137,13,106,2],[138,0,109,2],[138,11,109,9],[138,40,109,10],[138,46,109,9],[139,0,109,17],[139,6,109,17],[139,9,109,20],[139,11,109,22,"ast"],[139,14,109,9],[140,0,109,27],[140,6,109,27],[140,14,109,35],[140,16,109,37,"override"],[140,24,109,45],[140,28,109,49,"props"],[140,33,109,9],[141,0,109,9],[142,0,109,9],[143,0,109,9],[144,0,109,9],[145,0,109,9],[145,6,109,2],[146,0,110,1],[148,0,112,7],[148,11,112,22,"fetchText"],[148,20,112,7],[148,21,112,32,"uri"],[148,24,112,7],[149,0,112,7],[150,0,112,7],[151,0,112,7],[152,0,112,7],[153,0,112,7],[154,0,112,7],[155,0,112,7],[155,46,113,25,"fetch"],[155,51,113,30],[155,52,113,31,"uri"],[155,55,113,30],[155,56,112,7],[157,0,112,7],[158,0,113,8,"response"],[158,12,113,8,"response"],[158,20,112,7],[159,0,112,7],[160,0,112,7],[160,46,114,15,"response"],[160,54,114,23],[160,55,114,24,"text"],[160,59,114,15],[160,61,112,7],[162,0,112,7],[163,0,112,7],[165,0,112,7],[166,0,112,7],[167,0,112,7],[168,0,112,7],[169,0,112,7],[170,0,112,7],[171,0,112,7],[173,0,117,7],[173,6,117,13,"err"],[173,9,117,16],[173,12,117,19,"console"],[173,19,117,26],[173,20,117,27,"error"],[173,25,117,19],[173,26,117,33,"bind"],[173,30,117,19],[173,31,117,38,"console"],[173,38,117,19],[173,39,117,7],[176,0,119,7],[176,11,119,16,"SvgUri"],[176,17,119,7],[176,18,119,23,"props"],[176,23,119,7],[176,25,119,40],[177,0,119,40],[177,8,120,10,"uri"],[177,11,119,40],[177,14,120,18,"props"],[177,19,119,40],[177,20,120,10,"uri"],[177,23,119,40],[179,0,119,40],[179,20,121,24],[179,41,121,48],[179,45,121,24],[179,46,119,40],[180,0,119,40],[181,0,119,40],[181,8,121,9,"xml"],[181,11,119,40],[182,0,119,40],[182,8,121,14,"setXml"],[182,14,119,40],[184,0,122,2],[184,26,122,12],[184,38,122,18],[185,0,123,4,"uri"],[185,6,123,4,"uri"],[185,9,123,7],[185,12,124,8,"fetchText"],[185,21,124,17],[185,22,124,18,"uri"],[185,25,124,17],[185,26,124,8],[185,27,125,11,"then"],[185,31,124,8],[185,32,125,16,"setXml"],[185,38,124,8],[185,40,126,11,"catch"],[185,45,124,8],[185,46,126,17,"err"],[185,49,124,8],[185,50,123,7],[185,53,127,8,"setXml"],[185,59,127,14],[185,60,127,15],[185,64,127,14],[185,65,123,4],[186,0,128,3],[186,5,122,2],[186,7,128,5],[186,8,128,6,"uri"],[186,11,128,5],[186,12,122,2],[187,0,129,2],[187,11,129,9],[187,40,129,10],[187,46,129,9],[188,0,129,17],[188,6,129,17],[188,9,129,20],[188,11,129,22,"xml"],[188,14,129,9],[189,0,129,27],[189,6,129,27],[189,14,129,35],[189,16,129,37,"props"],[189,21,129,9],[190,0,129,9],[191,0,129,9],[192,0,129,9],[193,0,129,9],[194,0,129,9],[194,6,129,2],[195,0,130,1],[197,6,134,13,"SvgFromXml"],[197,16],[212,12,135,2,"state"],[212,17],[212,20,135,10],[213,0,135,12,"ast"],[213,8,135,12,"ast"],[213,11,135,15],[213,13,135,17],[214,0,135,10],[214,7],[220,42,136,22],[221,0,137,4],[221,13,137,9,"parse"],[221,18,137,4],[221,19,137,15],[221,24,137,20,"props"],[221,29,137,15],[221,30,137,26,"xml"],[221,33,137,4],[222,0,138,3],[225,41,139,21,"prevProps"],[225,50],[225,52,139,56],[226,0,139,56],[226,12,140,12,"xml"],[226,15,139,56],[226,18,140,20],[226,23,140,25,"props"],[226,28,139,56],[226,29,140,12,"xml"],[226,32,139,56],[228,0,141,4],[228,12,141,8,"xml"],[228,15,141,11],[228,20,141,16,"prevProps"],[228,29,141,25],[228,30,141,26,"xml"],[228,33,141,4],[228,35,141,31],[229,0,142,6],[229,15,142,11,"parse"],[229,20,142,6],[229,21,142,17,"xml"],[229,24,142,6],[230,0,143,5],[231,0,144,3],[234,28,145,8,"xml"],[234,31],[234,33,145,28],[235,0,146,4],[235,12,146,8],[236,0,147,6],[236,15,147,11,"setState"],[236,23,147,6],[236,24,147,20],[237,0,147,22,"ast"],[237,12,147,22,"ast"],[237,15,147,25],[237,17,147,27,"xml"],[237,20,147,30],[237,23,147,33,"parse"],[237,29,147,38],[237,30,147,39,"xml"],[237,33,147,38],[237,34,147,30],[237,37,147,46],[238,0,147,20],[238,11,147,6],[239,0,148,5],[239,9,146,4],[239,10,148,6],[239,17,148,13,"e"],[239,18,148,6],[239,20,148,16],[240,0,149,6,"console"],[240,10,149,6,"console"],[240,17,149,13],[240,18,149,14,"error"],[240,23,149,6],[240,24,149,20,"e"],[240,25,149,6],[241,0,150,5],[242,0,151,3],[245,31,152,11],[246,0,152,11],[246,12,154,6,"props"],[246,17,152,11],[246,20,156,8],[246,24,152,11],[246,25,154,6,"props"],[246,30,152,11],[247,0,152,11],[247,12,155,15,"ast"],[247,15,152,11],[247,18,156,8],[247,22,152,11],[247,23,155,6,"state"],[247,28,152,11],[247,29,155,15,"ast"],[247,32,152,11],[248,0,157,4],[248,15,157,11],[248,44,157,12],[248,50,157,11],[249,0,157,19],[249,10,157,19],[249,13,157,22],[249,15,157,24,"ast"],[249,18,157,11],[250,0,157,29],[250,10,157,29],[250,18,157,37],[250,20,157,39,"props"],[250,25,157,44],[250,26,157,45,"override"],[250,34,157,39],[250,38,157,57,"props"],[250,43,157,11],[251,0,157,11],[252,0,157,11],[253,0,157,11],[254,0,157,11],[255,0,157,11],[255,10,157,4],[256,0,158,3],[259,4,134,32,"Component"],[259,20],[263,6,161,13,"SvgFromUri"],[263,16],[278,13,162,2,"state"],[278,18],[278,21,162,10],[279,0,162,12,"xml"],[279,8,162,12,"xml"],[279,11,162,15],[279,13,162,17],[280,0,162,10],[280,7],[286,42,163,22],[287,0,164,4],[287,13,164,9,"fetch"],[287,18,164,4],[287,19,164,15],[287,24,164,20,"props"],[287,29,164,15],[287,30,164,26,"uri"],[287,33,164,4],[288,0,165,3],[291,41,166,21,"prevProps"],[291,50],[291,52,166,56],[292,0,166,56],[292,12,167,12,"uri"],[292,15,166,56],[292,18,167,20],[292,23,167,25,"props"],[292,28,166,56],[292,29,167,12,"uri"],[292,32,166,56],[294,0,168,4],[294,12,168,8,"uri"],[294,15,168,11],[294,20,168,16,"prevProps"],[294,29,168,25],[294,30,168,26,"uri"],[294,33,168,4],[294,35,168,31],[295,0,169,6],[295,15,169,11,"fetch"],[295,20,169,6],[295,21,169,17,"uri"],[295,24,169,6],[296,0,170,5],[297,0,171,3],[300,28,172,14,"uri"],[300,31],[306,31,174,6],[306,35],[308,21,174,27,"uri"],[308,24],[314,50,174,39,"fetchText"],[314,59,174,48],[314,60,174,49,"uri"],[314,63,174,48],[314,64],[322,31,174,56],[322,35],[327,0,174,22,"xml"],[327,18,174,22,"xml"],[327,21],[330,29,174,11,"setState"],[330,37],[338,0,176,6,"console"],[338,16,176,6,"console"],[338,23,176,13],[338,24,176,14,"error"],[338,29,176,6],[349,31,179,11],[350,0,179,11],[350,12,181,6,"props"],[350,17,179,11],[350,20,183,8],[350,24,179,11],[350,25,181,6,"props"],[350,30,179,11],[351,0,179,11],[351,12,182,15,"xml"],[351,15,179,11],[351,18,183,8],[351,22,179,11],[351,23,182,6,"state"],[351,28,179,11],[351,29,182,15,"xml"],[351,32,179,11],[352,0,184,4],[352,15,184,11],[352,44,184,12],[352,54,184,11],[353,0,184,23],[353,10,184,23],[353,13,184,26],[353,15,184,28,"xml"],[353,18,184,11],[354,0,184,33],[354,10,184,33],[354,18,184,41],[354,20,184,43,"props"],[354,25,184,11],[355,0,184,11],[356,0,184,11],[357,0,184,11],[358,0,184,11],[359,0,184,11],[359,10,184,4],[360,0,185,3],[363,4,161,32,"Component"],[363,20],[367,0,188,0],[367,6,188,6,"upperCase"],[367,15,188,15],[367,18,188,18],[367,27,188,6,"upperCase"],[367,36,188,18],[367,37,188,19,"_match"],[367,43,188,18],[367,45,188,35,"letter"],[367,51,188,18],[368,0,188,18],[368,11,188,54,"letter"],[368,17,188,60],[368,18,188,61,"toUpperCase"],[368,29,188,54],[368,31,188,18],[369,0,188,18],[369,3,188,0],[371,0,190,7],[371,6,190,13,"camelCase"],[371,15,190,22],[371,18,190,25],[371,27,190,13,"camelCase"],[371,36,190,25],[371,37,190,26,"phrase"],[371,43,190,25],[372,0,190,25],[372,11,191,2,"phrase"],[372,17,191,8],[372,18,191,9,"replace"],[372,25,191,2],[372,26,191,17],[372,40,191,2],[372,42,191,33,"upperCase"],[372,51,191,2],[372,52,190,25],[373,0,190,25],[373,3,190,7],[377,0,195,7],[377,11,195,16,"getStyle"],[377,19,195,7],[377,20,195,25,"string"],[377,26,195,7],[377,28,195,49],[378,0,196,2],[378,8,196,8,"style"],[378,13,196,21],[378,16,196,24],[378,18,196,2],[379,0,197,2],[379,8,197,8,"declarations"],[379,20,197,20],[379,23,197,23,"string"],[379,29,197,29],[379,30,197,30,"split"],[379,35,197,23],[379,36,197,36],[379,39,197,23],[379,40,197,2],[380,0,195,49],[380,8,198,10,"length"],[380,14,195,49],[380,17,198,21,"declarations"],[380,29,195,49],[380,30,198,10,"length"],[380,36,195,49],[382,0,199,2],[382,9,199,7],[382,13,199,11,"i"],[382,14,199,12],[382,17,199,15],[382,18,199,2],[382,20,199,18,"i"],[382,21,199,19],[382,24,199,22,"length"],[382,30,199,2],[382,32,199,30,"i"],[382,33,199,31],[382,35,199,2],[382,37,199,35],[383,0,200,4],[383,10,200,10,"declaration"],[383,21,200,21],[383,24,200,24,"declarations"],[383,36,200,36],[383,37,200,37,"i"],[383,38,200,36],[383,39,200,4],[385,0,201,4],[385,10,201,8,"declaration"],[385,21,201,19],[385,22,201,20,"length"],[385,28,201,8],[385,33,201,31],[385,34,201,4],[385,36,201,34],[386,0,202,6],[386,12,202,12,"split"],[386,17,202,17],[386,20,202,20,"declaration"],[386,31,202,31],[386,32,202,32,"split"],[386,37,202,20],[386,38,202,38],[386,41,202,20],[386,42,202,6],[387,0,203,6],[387,12,203,12,"property"],[387,21,203,20],[387,24,203,23,"split"],[387,29,203,28],[387,30,203,29],[387,31,203,28],[387,32,203,6],[388,0,204,6],[388,12,204,12,"value"],[388,17,204,17],[388,20,204,20,"split"],[388,25,204,25],[388,26,204,26],[388,27,204,25],[388,28,204,6],[389,0,205,6,"style"],[389,8,205,6,"style"],[389,13,205,11],[389,14,205,12,"camelCase"],[389,23,205,21],[389,24,205,22,"property"],[389,33,205,30],[389,34,205,31,"trim"],[389,38,205,22],[389,40,205,21],[389,41,205,11],[389,42,205,6],[389,45,205,42,"value"],[389,50,205,47],[389,51,205,48,"trim"],[389,55,205,42],[389,57,205,6],[390,0,206,5],[391,0,207,3],[393,0,208,2],[393,11,208,9,"style"],[393,16,208,2],[394,0,209,1],[396,0,211,7],[396,11,211,16,"astToReact"],[396,21,211,7],[396,22,212,2,"value"],[396,27,211,7],[396,29,213,2,"index"],[396,34,211,7],[396,36,214,24],[397,0,215,2],[397,8,215,6],[397,15,215,13,"value"],[397,20,215,6],[397,25,215,23],[397,33,215,2],[397,35,215,33],[398,0,215,33],[398,10,216,12,"Tag"],[398,13,215,33],[398,16,216,37,"value"],[398,21,215,33],[398,22,216,12,"Tag"],[398,25,215,33],[399,0,215,33],[399,10,216,17,"props"],[399,15,215,33],[399,18,216,37,"value"],[399,23,215,33],[399,24,216,17,"props"],[399,29,215,33],[400,0,215,33],[400,10,216,24,"children"],[400,18,215,33],[400,21,216,37,"value"],[400,26,215,33],[400,27,216,24,"children"],[400,35,215,33],[401,0,217,4],[401,13,218,6],[401,42,218,7],[401,45,218,6],[402,0,218,11],[402,8,218,11],[402,11,218,14],[402,13,218,16,"index"],[403,0,218,6],[403,9,218,27,"props"],[403,14,218,6],[404,0,218,6],[405,0,218,6],[406,0,218,6],[407,0,218,6],[408,0,218,6],[408,10,219,10,"children"],[408,18,219,9],[408,19,219,40,"map"],[408,22,219,9],[408,23,219,44,"astToReact"],[408,33,219,9],[408,34,218,6],[408,35,217,4],[409,0,222,3],[411,0,223,2],[411,11,223,9,"value"],[411,16,223,2],[412,0,224,1],[414,0,228,0],[414,11,228,9,"repeat"],[414,17,228,0],[414,18,228,16,"str"],[414,21,228,0],[414,23,228,29,"i"],[414,24,228,0],[414,26,228,40],[415,0,229,2],[415,8,229,6,"result"],[415,14,229,12],[415,17,229,15],[415,19,229,2],[417,0,230,2],[417,11,230,9,"i"],[417,12,230,10],[417,14,230,2],[417,16,230,14],[418,0,231,4,"result"],[418,6,231,4,"result"],[418,12,231,10],[418,16,231,14,"str"],[418,19,231,4],[419,0,232,3],[421,0,233,2],[421,11,233,9,"result"],[421,17,233,2],[422,0,234,1],[424,0,236,0],[424,6,236,6,"toSpaces"],[424,14,236,14],[424,17,236,17],[424,26,236,6,"toSpaces"],[424,34,236,17],[424,35,236,18,"tabs"],[424,39,236,17],[425,0,236,17],[425,11,236,35,"repeat"],[425,17,236,41],[425,18,236,42],[425,22,236,41],[425,24,236,48,"tabs"],[425,28,236,52],[425,29,236,53,"length"],[425,35,236,41],[425,36,236,17],[426,0,236,17],[426,3,236,0],[428,0,238,0],[428,11,238,9,"locate"],[428,17,238,0],[428,18,238,16,"source"],[428,24,238,0],[428,26,238,32,"i"],[428,27,238,0],[428,29,238,43],[429,0,239,2],[429,8,239,8,"lines"],[429,13,239,13],[429,16,239,16,"source"],[429,22,239,22],[429,23,239,23,"split"],[429,28,239,16],[429,29,239,29],[429,33,239,16],[429,34,239,2],[430,0,240,2],[430,8,240,8,"nLines"],[430,14,240,14],[430,17,240,17,"lines"],[430,22,240,22],[430,23,240,23,"length"],[430,29,240,2],[431,0,241,2],[431,8,241,6,"column"],[431,14,241,12],[431,17,241,15,"i"],[431,18,241,2],[432,0,242,2],[432,8,242,6,"line"],[432,12,242,10],[432,15,242,13],[432,16,242,2],[434,0,243,2],[434,11,243,9,"line"],[434,15,243,13],[434,18,243,16,"nLines"],[434,24,243,2],[434,26,243,24,"line"],[434,30,243,28],[434,32,243,2],[434,34,243,32],[435,0,243,32],[435,10,244,12,"length"],[435,16,243,32],[435,19,244,23,"lines"],[435,24,244,28],[435,25,244,29,"line"],[435,29,244,28],[435,30,243,32],[435,31,244,12,"length"],[435,37,243,32],[437,0,245,4],[437,10,245,8,"column"],[437,16,245,14],[437,20,245,18,"length"],[437,26,245,4],[437,28,245,26],[438,0,246,6,"column"],[438,8,246,6,"column"],[438,14,246,12],[438,18,246,16,"length"],[438,24,246,6],[439,0,247,5],[439,7,245,4],[439,13,247,11],[440,0,248,6],[441,0,249,5],[442,0,250,3],[444,0,251,2],[444,8,251,8,"before"],[444,14,251,14],[444,17,251,17,"source"],[444,23,251,23],[444,24,251,24,"slice"],[444,29,251,17],[444,30,251,30],[444,31,251,17],[444,33,251,33,"i"],[444,34,251,17],[444,36,251,36,"replace"],[444,43,251,17],[444,44,251,44],[444,50,251,17],[444,52,251,52,"toSpaces"],[444,60,251,17],[444,61,251,2],[445,0,252,2],[445,8,252,8,"beforeExec"],[445,18,252,18],[445,21,252,21],[445,33,252,33,"exec"],[445,37,252,21],[445,38,252,38,"before"],[445,44,252,21],[445,45,252,2],[446,0,253,2],[446,8,253,8,"beforeLine"],[446,18,253,18],[446,21,253,22,"beforeExec"],[446,31,253,32],[446,35,253,36,"beforeExec"],[446,45,253,46],[446,46,253,47],[446,47,253,46],[446,48,253,21],[446,52,253,54],[446,54,253,2],[447,0,254,2],[447,8,254,8,"after"],[447,13,254,13],[447,16,254,16,"source"],[447,22,254,22],[447,23,254,23,"slice"],[447,28,254,16],[447,29,254,29,"i"],[447,30,254,16],[447,31,254,2],[448,0,255,2],[448,8,255,8,"afterExec"],[448,17,255,17],[448,20,255,20],[448,31,255,31,"exec"],[448,35,255,20],[448,36,255,36,"after"],[448,41,255,20],[448,42,255,2],[449,0,256,2],[449,8,256,8,"afterLine"],[449,17,256,17],[449,20,256,20,"afterExec"],[449,29,256,29],[449,33,256,33,"afterExec"],[449,42,256,42],[449,43,256,43],[449,44,256,42],[449,45,256,2],[450,0,257,2],[450,8,257,8,"pad"],[450,11,257,11],[450,14,257,14,"repeat"],[450,20,257,20],[450,21,257,21],[450,24,257,20],[450,26,257,26,"beforeLine"],[450,36,257,36],[450,37,257,37,"length"],[450,43,257,20],[450,44,257,2],[451,0,258,2],[451,8,258,8,"snippet"],[451,15,258,15],[451,23,258,21,"beforeLine"],[451,33,258,15],[451,36,258,34,"afterLine"],[451,45,258,15],[451,55,258,48,"pad"],[451,58,258,15],[451,64,258,2],[452,0,259,2],[452,11,259,9],[453,0,259,11,"line"],[453,6,259,11,"line"],[453,10,259,15],[453,12,259,11,"line"],[453,16,259,9],[454,0,259,17,"column"],[454,6,259,17,"column"],[454,12,259,23],[454,14,259,17,"column"],[454,20,259,9],[455,0,259,25,"snippet"],[455,6,259,25,"snippet"],[455,13,259,32],[455,15,259,25,"snippet"],[456,0,259,9],[456,5,259,2],[457,0,260,1],[459,0,262,0],[459,6,262,6,"validNameCharacters"],[459,25,262,25],[459,28,262,28],[459,44,262,0],[460,0,263,0],[460,6,263,6,"whitespace"],[460,16,263,16],[460,19,263,19],[460,31,263,0],[461,0,264,0],[461,6,264,6,"quotemarks"],[461,16,264,16],[461,19,264,19],[461,25,264,0],[463,0,268,7],[463,11,268,16,"parse"],[463,17,268,7],[463,18,268,22,"source"],[463,24,268,7],[463,26,268,38,"middleware"],[463,36,268,7],[463,38,268,78],[464,0,269,2],[464,8,269,8,"length"],[464,14,269,14],[464,17,269,17,"source"],[464,23,269,23],[464,24,269,24,"length"],[464,30,269,2],[465,0,270,2],[465,8,270,6,"currentElement"],[465,22,270,35],[465,25,270,38],[465,29,270,2],[466,0,271,2],[466,8,271,6,"state"],[466,13,271,11],[466,16,271,14,"metadata"],[466,24,271,2],[467,0,272,2],[467,8,272,6,"children"],[467,16,272,14],[467,19,272,17],[467,23,272,2],[468,0,273,2],[468,8,273,6,"root"],[468,12,273,2],[469,0,274,2],[469,8,274,6,"stack"],[469,13,274,21],[469,16,274,24],[469,18,274,2],[471,0,276,2],[471,13,276,11,"error"],[471,18,276,2],[471,19,276,17,"message"],[471,26,276,2],[471,28,276,34],[472,0,276,34],[472,20,277,38,"locate"],[472,26,277,44],[472,27,277,45,"source"],[472,33,277,44],[472,35,277,53,"i"],[472,36,277,44],[472,37,276,34],[473,0,276,34],[473,10,277,12,"line"],[473,14,276,34],[473,25,277,12,"line"],[473,29,276,34],[474,0,276,34],[474,10,277,18,"column"],[474,16,276,34],[474,27,277,18,"column"],[474,33,276,34],[475,0,276,34],[475,10,277,26,"snippet"],[475,17,276,34],[475,28,277,26,"snippet"],[475,35,276,34],[477,0,278,4],[477,12,278,10],[477,16,278,14,"Error"],[477,21,278,10],[477,22,279,9,"message"],[477,29,278,10],[477,39,279,21,"line"],[477,43,278,10],[477,52,279,29,"column"],[477,58,278,10],[477,137,279,109,"snippet"],[477,144,278,10],[477,145,278,4],[478,0,281,3],[480,0,283,2],[480,13,283,11,"metadata"],[480,21,283,2],[480,24,283,22],[481,0,284,4],[481,13,285,6,"i"],[481,14,285,7],[481,17,285,10],[481,18,285,6],[481,21,285,14,"length"],[481,27,285,6],[481,32,286,7,"source"],[481,38,286,13],[481,39,286,14,"i"],[481,40,286,13],[481,41,286,7],[481,46,286,21],[481,49,286,7],[481,53,286,28],[481,54,286,29,"validNameCharacters"],[481,73,286,48],[481,74,286,49,"test"],[481,78,286,29],[481,79,286,54,"source"],[481,85,286,60],[481,86,286,61,"i"],[481,87,286,62],[481,90,286,65],[481,91,286,60],[481,92,286,29],[481,93,285,6],[481,94,284,4],[481,96,287,6],[482,0,288,6,"i"],[482,8,288,6,"i"],[482,9,288,7],[483,0,289,5],[485,0,291,4],[485,13,291,11,"neutral"],[485,20,291,18],[485,22,291,4],[486,0,292,3],[488,0,294,2],[488,13,294,11,"neutral"],[488,20,294,2],[488,23,294,21],[489,0,295,4],[489,10,295,8,"text"],[489,14,295,12],[489,17,295,15],[489,19,295,4],[490,0,296,4],[490,10,296,8,"char"],[490,14,296,4],[492,0,297,4],[492,13,297,11,"i"],[492,14,297,12],[492,17,297,15,"length"],[492,23,297,11],[492,27,297,25],[492,28,297,26,"char"],[492,32,297,30],[492,35,297,33,"source"],[492,41,297,39],[492,42,297,40,"i"],[492,43,297,39],[492,44,297,25],[492,50,297,48],[492,53,297,4],[492,55,297,53],[493,0,298,6,"text"],[493,8,298,6,"text"],[493,12,298,10],[493,16,298,14,"char"],[493,20,298,6],[494,0,299,6,"i"],[494,8,299,6,"i"],[494,9,299,7],[494,13,299,11],[494,14,299,6],[495,0,300,5],[497,0,302,4],[497,10,302,8],[497,15,302,13,"test"],[497,19,302,8],[497,20,302,18,"text"],[497,24,302,8],[497,25,302,4],[497,27,302,25],[498,0,303,6,"children"],[498,8,303,6,"children"],[498,16,303,14],[498,17,303,15,"push"],[498,21,303,6],[498,22,303,20,"text"],[498,26,303,6],[499,0,304,5],[501,0,306,4],[501,10,306,8,"source"],[501,16,306,14],[501,17,306,15,"i"],[501,18,306,14],[501,19,306,8],[501,24,306,22],[501,27,306,4],[501,29,306,27],[502,0,307,6],[502,15,307,13,"openingTag"],[502,25,307,6],[503,0,308,5],[505,0,310,4],[505,13,310,11,"neutral"],[505,20,310,4],[506,0,311,3],[508,0,313,2],[508,13,313,11,"openingTag"],[508,23,313,2],[508,26,313,24],[509,0,314,4],[509,10,314,10,"char"],[509,14,314,14],[509,17,314,17,"source"],[509,23,314,23],[509,24,314,24,"i"],[509,25,314,23],[509,26,314,4],[511,0,316,4],[511,10,316,8,"char"],[511,14,316,12],[511,19,316,17],[511,22,316,4],[511,24,316,22],[512,0,317,6],[512,15,317,13,"neutral"],[512,22,317,6],[513,0,318,5],[515,0,320,4],[515,10,320,8,"char"],[515,14,320,12],[515,19,320,17],[515,22,320,4],[515,24,320,22],[516,0,321,6],[516,12,321,12,"start"],[516,17,321,17],[516,20,321,20,"i"],[516,21,321,21],[516,24,321,24],[516,25,321,6],[518,0,322,6],[518,12,322,10,"source"],[518,18,322,16],[518,19,322,17,"slice"],[518,24,322,10],[518,25,322,23,"start"],[518,30,322,10],[518,32,322,30,"i"],[518,33,322,31],[518,36,322,34],[518,37,322,10],[518,43,322,41],[518,47,322,6],[518,49,322,47],[519,0,323,8],[519,17,323,15,"comment"],[519,24,323,8],[520,0,324,7],[522,0,325,6],[522,12,325,12,"end"],[522,15,325,15],[522,18,325,18,"i"],[522,19,325,19],[522,22,325,22],[522,23,325,6],[524,0,326,6],[524,12,326,10,"source"],[524,18,326,16],[524,19,326,17,"slice"],[524,24,326,10],[524,25,326,23,"start"],[524,30,326,10],[524,32,326,30,"end"],[524,35,326,10],[524,41,326,39],[524,50,326,6],[524,52,326,50],[525,0,327,8],[525,17,327,15,"cdata"],[525,22,327,8],[526,0,328,7],[528,0,329,6],[528,12,329,10],[528,23,329,21,"test"],[528,27,329,10],[528,28,329,26,"source"],[528,34,329,32],[528,35,329,33,"slice"],[528,40,329,26],[528,41,329,39,"start"],[528,46,329,26],[528,48,329,46,"end"],[528,51,329,26],[528,52,329,10],[528,53,329,6],[528,55,329,53],[529,0,330,8],[529,17,330,15,"neutral"],[529,24,330,8],[530,0,331,7],[531,0,332,5],[533,0,334,4],[533,10,334,8,"char"],[533,14,334,12],[533,19,334,17],[533,22,334,4],[533,24,334,22],[534,0,335,6],[534,15,335,13,"closingTag"],[534,25,335,6],[535,0,336,5],[537,0,338,4],[537,10,338,10,"tag"],[537,13,338,13],[537,16,338,16,"getName"],[537,23,338,23],[537,25,338,4],[538,0,339,4],[538,10,339,10,"props"],[538,15,339,64],[538,18,339,67],[538,20,339,4],[539,0,340,4],[539,10,340,10,"element"],[539,17,340,25],[539,20,340,28],[540,0,341,6,"tag"],[540,8,341,6,"tag"],[540,11,341,9],[540,13,341,6,"tag"],[540,16,340,28],[541,0,342,6,"props"],[541,8,342,6,"props"],[541,13,342,11],[541,15,342,6,"props"],[541,20,340,28],[542,0,343,6,"children"],[542,8,343,6,"children"],[542,16,343,14],[542,18,343,16],[542,20,340,28],[543,0,344,6,"parent"],[543,8,344,6,"parent"],[543,14,344,12],[543,16,344,14,"currentElement"],[543,30,340,28],[544,0,345,6,"Tag"],[544,8,345,6,"Tag"],[544,11,345,9],[544,13,345,11,"tags"],[544,17,345,15],[544,18,345,16,"tag"],[544,21,345,15],[544,22,345,11],[544,26,345,24,"missingTag"],[545,0,340,28],[545,7,340,4],[547,0,348,4],[547,10,348,8,"currentElement"],[547,24,348,4],[547,26,348,24],[548,0,349,6,"children"],[548,8,349,6,"children"],[548,16,349,14],[548,17,349,15,"push"],[548,21,349,6],[548,22,349,20,"element"],[548,29,349,6],[549,0,350,5],[549,7,348,4],[549,13,350,11],[550,0,351,6,"root"],[550,8,351,6,"root"],[550,12,351,10],[550,15,351,13,"element"],[550,22,351,6],[551,0,352,5],[553,0,354,4,"getAttributes"],[553,6,354,4,"getAttributes"],[553,19,354,17],[553,20,354,18,"props"],[553,25,354,17],[553,26,354,4],[554,0,313,24],[554,10,356,12,"style"],[554,15,313,24],[554,18,356,22,"props"],[554,23,313,24],[554,24,356,12,"style"],[554,29,313,24],[556,0,357,4],[556,10,357,8],[556,17,357,15,"style"],[556,22,357,8],[556,27,357,25],[556,35,357,4],[556,37,357,35],[557,0,358,6,"element"],[557,8,358,6,"element"],[557,15,358,13],[557,16,358,14,"styles"],[557,22,358,6],[557,25,358,23,"style"],[557,30,358,6],[558,0,359,6,"props"],[558,8,359,6,"props"],[558,13,359,11],[558,14,359,12,"style"],[558,19,359,6],[558,22,359,20,"getStyle"],[558,30,359,28],[558,31,359,29,"style"],[558,36,359,28],[558,37,359,6],[559,0,360,5],[561,0,362,4],[561,10,362,8,"selfClosing"],[561,21,362,19],[561,24,362,22],[561,29,362,4],[563,0,364,4],[563,10,364,8,"source"],[563,16,364,14],[563,17,364,15,"i"],[563,18,364,14],[563,19,364,8],[563,24,364,22],[563,27,364,4],[563,29,364,27],[564,0,365,6,"i"],[564,8,365,6,"i"],[564,9,365,7],[564,13,365,11],[564,14,365,6],[565,0,366,6,"selfClosing"],[565,8,366,6,"selfClosing"],[565,19,366,17],[565,22,366,20],[565,26,366,6],[566,0,367,5],[568,0,369,4],[568,10,369,8,"source"],[568,16,369,14],[568,17,369,15,"i"],[568,18,369,14],[568,19,369,8],[568,24,369,22],[568,27,369,4],[568,29,369,27],[569,0,370,6,"error"],[569,8,370,6,"error"],[569,13,370,11],[569,14,370,12],[569,26,370,11],[569,27,370,6],[570,0,371,5],[572,0,373,4],[572,10,373,8],[572,11,373,9,"selfClosing"],[572,22,373,4],[572,24,373,22],[573,0,374,6,"currentElement"],[573,8,374,6,"currentElement"],[573,22,374,20],[573,25,374,23,"element"],[573,32,374,6],[574,0,375,9,"children"],[574,8,375,9,"children"],[574,16,373,22],[574,19,375,22,"element"],[574,26,373,22],[574,27,375,9,"children"],[574,35,373,22],[575,0,376,6,"stack"],[575,8,376,6,"stack"],[575,13,376,11],[575,14,376,12,"push"],[575,18,376,6],[575,19,376,17,"element"],[575,26,376,6],[576,0,377,5],[578,0,379,4],[578,13,379,11,"neutral"],[578,20,379,4],[579,0,380,3],[581,0,382,2],[581,13,382,11,"comment"],[581,20,382,2],[581,23,382,21],[582,0,383,4],[582,10,383,10,"index"],[582,15,383,15],[582,18,383,18,"source"],[582,24,383,24],[582,25,383,25,"indexOf"],[582,32,383,18],[582,33,383,33],[582,38,383,18],[582,40,383,40,"i"],[582,41,383,18],[582,42,383,4],[584,0,384,4],[584,10,384,8],[584,11,384,9],[584,12,384,10,"index"],[584,17,384,4],[584,19,384,17],[585,0,385,6,"error"],[585,8,385,6,"error"],[585,13,385,11],[585,14,385,12],[585,28,385,11],[585,29,385,6],[586,0,386,5],[588,0,388,4,"i"],[588,6,388,4,"i"],[588,7,388,5],[588,10,388,8,"index"],[588,15,388,13],[588,18,388,16],[588,19,388,4],[589,0,389,4],[589,13,389,11,"neutral"],[589,20,389,4],[590,0,390,3],[592,0,392,2],[592,13,392,11,"cdata"],[592,18,392,2],[592,21,392,19],[593,0,393,4],[593,10,393,10,"index"],[593,15,393,15],[593,18,393,18,"source"],[593,24,393,24],[593,25,393,25,"indexOf"],[593,32,393,18],[593,33,393,33],[593,38,393,18],[593,40,393,40,"i"],[593,41,393,18],[593,42,393,4],[595,0,394,4],[595,10,394,8],[595,11,394,9],[595,12,394,10,"index"],[595,17,394,4],[595,19,394,17],[596,0,395,6,"error"],[596,8,395,6,"error"],[596,13,395,11],[596,14,395,12],[596,28,395,11],[596,29,395,6],[597,0,396,5],[599,0,398,4,"children"],[599,6,398,4,"children"],[599,14,398,12],[599,15,398,13,"push"],[599,19,398,4],[599,20,398,18,"source"],[599,26,398,24],[599,27,398,25,"slice"],[599,32,398,18],[599,33,398,31,"i"],[599,34,398,32],[599,37,398,35],[599,38,398,18],[599,40,398,38,"index"],[599,45,398,18],[599,46,398,4],[600,0,400,4,"i"],[600,6,400,4,"i"],[600,7,400,5],[600,10,400,8,"index"],[600,15,400,13],[600,18,400,16],[600,19,400,4],[601,0,401,4],[601,13,401,11,"neutral"],[601,20,401,4],[602,0,402,3],[604,0,404,2],[604,13,404,11,"closingTag"],[604,23,404,2],[604,26,404,24],[605,0,405,4],[605,10,405,10,"tag"],[605,13,405,13],[605,16,405,16,"getName"],[605,23,405,23],[605,25,405,4],[607,0,407,4],[607,10,407,8],[607,11,407,9,"tag"],[607,14,407,4],[607,16,407,14],[608,0,408,6,"error"],[608,8,408,6,"error"],[608,13,408,11],[608,14,408,12],[608,33,408,11],[608,34,408,6],[609,0,409,5],[611,0,411,4],[611,10,411,8,"currentElement"],[611,24,411,22],[611,28,411,26,"tag"],[611,31,411,29],[611,36,411,34,"currentElement"],[611,50,411,48],[611,51,411,49,"tag"],[611,54,411,4],[611,56,411,54],[612,0,412,6,"error"],[612,8,412,6,"error"],[612,13,412,11],[612,42,413,34,"tag"],[612,45,412,11],[612,77,413,64,"currentElement"],[612,91,413,78],[612,92,413,79,"tag"],[612,95,412,11],[612,102,412,6],[613,0,415,5],[615,0,417,4],[615,10,417,8,"source"],[615,16,417,14],[615,17,417,15,"i"],[615,18,417,14],[615,19,417,8],[615,24,417,22],[615,27,417,4],[615,29,417,27],[616,0,418,6,"error"],[616,8,418,6,"error"],[616,13,418,11],[616,14,418,12],[616,26,418,11],[616,27,418,6],[617,0,419,5],[619,0,421,4,"stack"],[619,6,421,4,"stack"],[619,11,421,9],[619,12,421,10,"pop"],[619,15,421,4],[620,0,422,4,"currentElement"],[620,6,422,4,"currentElement"],[620,20,422,18],[620,23,422,21,"stack"],[620,28,422,26],[620,29,422,27,"stack"],[620,34,422,32],[620,35,422,33,"length"],[620,41,422,27],[620,44,422,42],[620,45,422,26],[620,46,422,4],[622,0,423,4],[622,10,423,8,"currentElement"],[622,24,423,4],[622,26,423,24],[623,0,423,24],[623,30,424,22,"currentElement"],[623,44,423,24],[624,0,424,9,"children"],[624,8,424,9,"children"],[624,16,423,24],[624,35,424,9,"children"],[624,43,423,24],[625,0,425,5],[627,0,427,4],[627,13,427,11,"neutral"],[627,20,427,4],[628,0,428,3],[630,0,430,2],[630,13,430,11,"getName"],[630,20,430,2],[630,23,430,21],[631,0,431,4],[631,10,431,8,"name"],[631,14,431,12],[631,17,431,15],[631,19,431,4],[632,0,432,4],[632,10,432,8,"char"],[632,14,432,4],[634,0,433,4],[634,13,433,11,"i"],[634,14,433,12],[634,17,433,15,"length"],[634,23,433,11],[634,27,433,25,"validNameCharacters"],[634,46,433,44],[634,47,433,45,"test"],[634,51,433,25],[634,52,433,51,"char"],[634,56,433,55],[634,59,433,58,"source"],[634,65,433,64],[634,66,433,65,"i"],[634,67,433,64],[634,68,433,25],[634,69,433,4],[634,71,433,71],[635,0,434,6,"name"],[635,8,434,6,"name"],[635,12,434,10],[635,16,434,14,"char"],[635,20,434,6],[636,0,435,6,"i"],[636,8,435,6,"i"],[636,9,435,7],[636,13,435,11],[636,14,435,6],[637,0,436,5],[639,0,438,4],[639,13,438,11,"name"],[639,17,438,4],[640,0,439,3],[642,0,441,2],[642,13,441,11,"getAttributes"],[642,26,441,2],[642,27,441,25,"props"],[642,32,441,2],[642,34,444,5],[643,0,445,4],[643,13,445,11,"i"],[643,14,445,12],[643,17,445,15,"length"],[643,23,445,4],[643,25,445,23],[644,0,446,6],[644,12,446,10],[644,13,446,11,"whitespace"],[644,23,446,21],[644,24,446,22,"test"],[644,28,446,11],[644,29,446,27,"source"],[644,35,446,33],[644,36,446,34,"i"],[644,37,446,33],[644,38,446,11],[644,39,446,6],[644,41,446,39],[645,0,447,8],[646,0,448,7],[648,0,449,6,"allowSpaces"],[648,8,449,6,"allowSpaces"],[648,19,449,17],[649,0,451,6],[649,12,451,12,"name"],[649,16,451,16],[649,19,451,19,"getName"],[649,26,451,26],[649,28,451,6],[651,0,452,6],[651,12,452,10],[651,13,452,11,"name"],[651,17,452,6],[651,19,452,17],[652,0,453,8],[653,0,454,7],[655,0,456,6],[655,12,456,10,"value"],[655,17,456,42],[655,20,456,45],[655,24,456,6],[656,0,458,6,"allowSpaces"],[656,8,458,6,"allowSpaces"],[656,19,458,17],[658,0,459,6],[658,12,459,10,"source"],[658,18,459,16],[658,19,459,17,"i"],[658,20,459,16],[658,21,459,10],[658,26,459,24],[658,29,459,6],[658,31,459,29],[659,0,460,8,"i"],[659,10,460,8,"i"],[659,11,460,9],[659,15,460,13],[659,16,460,8],[660,0,461,8,"allowSpaces"],[660,10,461,8,"allowSpaces"],[660,21,461,19],[661,0,463,8,"value"],[661,10,463,8,"value"],[661,15,463,13],[661,18,463,16,"getAttributeValue"],[661,35,463,33],[661,37,463,8],[663,0,464,8],[663,14,464,12],[663,15,464,13,"isNaN"],[663,20,464,18],[663,21,464,19],[663,22,464,20,"value"],[663,27,464,18],[663,28,464,12],[663,32,464,30,"value"],[663,37,464,35],[663,38,464,36,"trim"],[663,42,464,30],[663,49,464,47],[663,51,464,8],[663,53,464,51],[664,0,465,10,"value"],[664,12,465,10,"value"],[664,17,465,15],[664,20,465,18],[664,21,465,19,"value"],[664,26,465,10],[665,0,466,9],[666,0,467,7],[668,0,469,6,"props"],[668,8,469,6,"props"],[668,13,469,11],[668,14,469,12,"camelCase"],[668,23,469,21],[668,24,469,22,"name"],[668,28,469,21],[668,29,469,11],[668,30,469,6],[668,33,469,31,"value"],[668,38,469,6],[669,0,470,5],[670,0,471,3],[672,0,473,2],[672,13,473,11,"getAttributeValue"],[672,30,473,2],[672,33,473,39],[673,0,474,4],[673,13,474,11,"quotemarks"],[673,23,474,21],[673,24,474,22,"test"],[673,28,474,11],[673,29,474,27,"source"],[673,35,474,33],[673,36,474,34,"i"],[673,37,474,33],[673,38,474,11],[673,42,475,8,"getQuotedAttributeValue"],[673,65,475,31],[673,67,474,11],[673,70,476,8,"getUnquotedAttributeValue"],[673,95,476,33],[673,97,474,4],[674,0,477,3],[676,0,479,2],[676,13,479,11,"getUnquotedAttributeValue"],[676,38,479,2],[676,41,479,39],[677,0,480,4],[677,10,480,8,"value"],[677,15,480,13],[677,18,480,16],[677,20,480,4],[679,0,481,4],[679,9,481,7],[680,0,482,6],[680,12,482,12,"char"],[680,16,482,16],[680,19,482,19,"source"],[680,25,482,25],[680,26,482,26,"i"],[680,27,482,25],[680,28,482,6],[682,0,483,6],[682,12,483,10,"char"],[682,16,483,14],[682,21,483,19],[682,24,483,10],[682,28,483,26,"char"],[682,32,483,30],[682,37,483,35],[682,40,483,10],[682,44,483,42,"char"],[682,48,483,46],[682,53,483,51],[682,56,483,6],[682,58,483,56],[683,0,484,8],[683,17,484,15,"value"],[683,22,484,8],[684,0,485,7],[686,0,487,6,"value"],[686,8,487,6,"value"],[686,13,487,11],[686,17,487,15,"char"],[686,21,487,6],[687,0,488,6,"i"],[687,8,488,6,"i"],[687,9,488,7],[687,13,488,11],[687,14,488,6],[688,0,489,5],[688,7,481,4],[688,15,489,13,"i"],[688,16,489,14],[688,19,489,17,"length"],[688,25,481,4],[690,0,491,4],[690,13,491,11,"value"],[690,18,491,4],[691,0,492,3],[693,0,494,2],[693,13,494,11,"getQuotedAttributeValue"],[693,36,494,2],[693,39,494,37],[694,0,495,4],[694,10,495,10,"quotemark"],[694,19,495,19],[694,22,495,22,"source"],[694,28,495,28],[694,29,495,29,"i"],[694,30,495,30],[694,32,495,28],[694,33,495,4],[695,0,497,4],[695,10,497,8,"value"],[695,15,497,13],[695,18,497,16],[695,20,497,4],[696,0,498,4],[696,10,498,8,"escaped"],[696,17,498,15],[696,20,498,18],[696,25,498,4],[698,0,500,4],[698,13,500,11,"i"],[698,14,500,12],[698,17,500,15,"length"],[698,23,500,4],[698,25,500,23],[699,0,501,6],[699,12,501,12,"char"],[699,16,501,16],[699,19,501,19,"source"],[699,25,501,25],[699,26,501,26,"i"],[699,27,501,27],[699,29,501,25],[699,30,501,6],[701,0,502,6],[701,12,502,10,"char"],[701,16,502,14],[701,21,502,19,"quotemark"],[701,30,502,10],[701,34,502,32],[701,35,502,33,"escaped"],[701,42,502,6],[701,44,502,42],[702,0,503,8],[702,17,503,15,"value"],[702,22,503,8],[703,0,504,7],[705,0,506,6],[705,12,506,10,"char"],[705,16,506,14],[705,21,506,19],[705,25,506,10],[705,29,506,27],[705,30,506,28,"escaped"],[705,37,506,6],[705,39,506,37],[706,0,507,8,"escaped"],[706,10,507,8,"escaped"],[706,17,507,15],[706,20,507,18],[706,24,507,8],[707,0,508,7],[709,0,510,6,"value"],[709,8,510,6,"value"],[709,13,510,11],[709,17,510,15,"escaped"],[709,24,510,22],[709,34,510,30,"char"],[709,38,510,22],[709,41,510,39,"char"],[709,45,510,6],[710,0,511,6,"escaped"],[710,8,511,6,"escaped"],[710,15,511,13],[710,18,511,16],[710,23,511,6],[711,0,512,5],[713,0,514,4],[713,13,514,11,"value"],[713,18,514,4],[714,0,515,3],[716,0,517,2],[716,13,517,11,"allowSpaces"],[716,24,517,2],[716,27,517,25],[717,0,518,4],[717,13,518,11,"i"],[717,14,518,12],[717,17,518,15,"length"],[717,23,518,11],[717,27,518,25,"whitespace"],[717,37,518,35],[717,38,518,36,"test"],[717,42,518,25],[717,43,518,41,"source"],[717,49,518,47],[717,50,518,48,"i"],[717,51,518,47],[717,52,518,25],[717,53,518,4],[717,55,518,53],[718,0,519,6,"i"],[718,8,519,6,"i"],[718,9,519,7],[718,13,519,11],[718,14,519,6],[719,0,520,5],[720,0,521,3],[722,0,523,2],[722,8,523,6,"i"],[722,9,523,7],[722,12,523,10],[722,13,523,2],[724,0,524,2],[724,11,524,9,"i"],[724,12,524,10],[724,15,524,13,"length"],[724,21,524,2],[724,23,524,21],[725,0,525,4],[725,10,525,8],[725,11,525,9,"state"],[725,16,525,4],[725,18,525,16],[726,0,526,6,"error"],[726,8,526,6,"error"],[726,13,526,11],[726,14,526,12],[726,36,526,11],[726,37,526,6],[727,0,527,5],[729,0,528,4,"state"],[729,6,528,4,"state"],[729,11,528,9],[729,14,528,12,"state"],[729,19,528,17],[729,21,528,4],[730,0,529,4,"i"],[730,6,529,4,"i"],[730,7,529,5],[730,11,529,9],[730,12,529,4],[731,0,530,3],[733,0,532,2],[733,8,532,6,"state"],[733,13,532,11],[733,18,532,16,"neutral"],[733,25,532,2],[733,27,532,25],[734,0,533,4,"error"],[734,6,533,4,"error"],[734,11,533,9],[734,12,533,10],[734,37,533,9],[734,38,533,4],[735,0,534,3],[737,0,536,2],[737,8,536,6,"root"],[737,12,536,2],[737,14,536,12],[738,0,537,4],[738,10,537,10,"xml"],[738,13,537,21],[738,16,537,24],[738,17,537,25,"middleware"],[738,27,537,35],[738,30,537,38,"middleware"],[738,40,537,48],[738,41,537,49,"root"],[738,45,537,48],[738,46,537,35],[738,49,537,57,"root"],[738,53,537,24],[738,58,537,66,"root"],[738,62,537,4],[740,0,538,4],[740,10,538,10,"ast"],[740,14,538,39],[740,17,538,42,"xml"],[740,20,538,45],[740,21,538,46,"children"],[740,29,538,42],[740,30,538,55,"map"],[740,33,538,42],[740,34,538,59,"astToReact"],[740,44,538,42],[740,45,538,4],[742,0,539,4],[742,10,539,10,"jsx"],[742,13,539,21],[742,16,539,24,"xml"],[742,19,539,4],[743,0,540,4,"jsx"],[743,6,540,4,"jsx"],[743,9,540,7],[743,10,540,8,"children"],[743,18,540,4],[743,21,540,19,"ast"],[743,25,540,4],[744,0,541,4],[744,13,541,11,"jsx"],[744,16,541,4],[745,0,542,3],[747,0,544,2],[747,11,544,9],[747,15,544,2],[748,0,545,1]],"functionMap":{"names":["<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","fetchText","SvgUri","useEffect$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA;ACyD;CDE;OEgC;CFU;OGE;qCCE,wCD;CHI;OKE;CLG;OMI;YCG;GDM;CNE;OQI;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CRC;OaE;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CbC;kBkBE,wDlB;yBmBE;2CnBC;OoBI;CpBc;OqBE;CrBa;AsBI;CtBM;iBuBE,2CvB;AwBE;CxBsB;OyBQ;ECQ;GDK;EEE;GFS;EGE;GHiB;EIE;GJmE;EKE;GLQ;EME;GNU;EOE;GPwB;EQE;GRS;ESE;GT8B;EUE;GVI;EWE;GXa;EYE;GZqB;EaE;GbI;CzBwB"}},"type":"js/module"}]}